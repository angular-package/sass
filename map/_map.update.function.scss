// Sass.
@use 'sass:map';

// Functions.
@use '../list/list.append.function' as list-append;

// Status: DONE
// The `map.update()` function allows to set multiple key-value sets in a `$map` with required `$key-value`
// and additional `$key-value-entries`.
// @param `$map` A map to update by multiple sets key-value.
// @param `$key-value` Required map of (key: value) to update `$map`.
// @arbitrary `$key-value-entries...` Additional maps of (key: value) to update `$map`.
// @returns The returned value is `$map` with updated keys of required `$key-value` and additional `$key-value-entries`.
@function update($map, $key-value, $key-value-entries...) {
  @each $key-value in list-append.append((), $key-value, comma, $key-value-entries...) {
    @each $key, $value in $key-value {
      $map: map.set($map, $key, $value);
    }
  }
  @return $map;
}

// Examples.
// $-map: ();

// update single key_value
// @debug update($-map, (key: (italic: italic, normal: normal, inherit: inherit))); // (key: (italic: italic, normal: normal, inherit: inherit))

// update multiple keys
// @debug update($-map, (arial: (size: large), georgia: (size: small), verdana: (size: medium))); // (arial: (size: large), georgia: (size: small), verdana: (size: medium))

// update multiple list keys
// @debug update($-map, ((arial large): (size: large), (georgia small): (size: small), verdana medium: (size: medium))); // (arial large: (size: large), georgia small: (size: small), verdana medium: (size: medium))
// @debug update($-map, ((arial large): (size: large)), ((georgia small): (size: small)), (verdana medium: (size: medium))); // (arial large: (size: large), georgia small: (size: small), verdana medium: (size: medium))
