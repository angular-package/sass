// Sass.
@use 'sass:list';
@use 'sass:map';

// Variables.
@use 'function.variables';

// Status: DONE
// The `function.has()` mixin.
@function has($value, $name: null, $prefix: variables.$prefix, $function: variables.$function) {
  @if type-of($value) == list or type-of($value) == map or type-of($value) == string {
    @if type-of($value) == map { $value: map.keys($value); }
    @if $name {
      @each $name in $name {
        @if list.index($value, $prefix + $name) {
          @return true;
        }
      }
      @return false;
    } @else {
      $name: map.keys($function);
      @for $i from 1 through list.length($name) {
        @if list.index($value, $prefix + list.nth($name, $i)) {
          @return true;
        }
      }
    }
  }
  @return false;
}

// Examples.
// list
// @debug has(--get); // true
// @debug has(--get unit 2); // true
// @debug has(--color unit 2); // true
// @debug has(--var unit 2); // false
// @debug has(unit --var one); // false

// map
// @debug has((--get: unit 2)); // true

// single name
// @debug has(--color unit 2, color); // true
// @debug has(unit 2 --get, color); // false

// multiple names
// @debug has(--color (primary dark) 15%, get color nest); // true
// @debug has(--color unit 2, get nest); // false

// prefix
// @debug has(__color unit 2, color, __); // true
// @debug has(-_-get unit 2, $prefix: -_-); // true
// @debug has(-_-get unit 2, color, -_-); // false
