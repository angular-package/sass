// Sass.
@use 'sass:list';

// Variables.
@use 'function.variables' as variables;

// Functions.
@use '../list/has/has.list.function' as has;
@use 'function.get.function' as *;

// Modules.
@use '../meta';

// Status: DONE
// The `function.call()` function invokes function of `$name` with `$arguments`.
// Function with the default prefix '' must be defined as follows `module-function`, e.g. `selector-nest`.
// @param `$name` Function name in a form `module-function`.
// @param `$arguments` Arguments to pass into invoked function named `$name`.
// @param `$prefix` Prefix for the function name in `$name`. By default, ''.
// @param `$functions` Additional functions of `map` type to call.
// @returns The returned value is result of invoked function named `$name` with `$arguments`.
@function call($name, $arguments, $prefix: variables.$prefix, $functions: meta.$module-functions) {
  @return meta.call(get($name, $prefix, $functions), $arguments...);
}
