// Functions.
@use 'select.type.function' as select-type;

// Status: DONE
// The `list.select-bool()` or `select.bool()` function returns any, first or last occurring `bool`, or specified `$bool` compared by using `$operator`.
// @param `$list` The list from which occurring `bool` or specified `$bool` compared by using `$operator` are retrieved.
// @param `$occurrence` Any, first, last, or only occurrence of `bool` value in `$list`.
// @param `$operator` Operator to compare `$list` elements, also with `$bool`.
// @arbitrary `$bool` A `bool` value to retrieve from `$list`, any not found is `null`.
// @returns The returned value is a `bool`, list of `bools` or list of specified `$bool` compared by using `$operator`.
// ? any/first/last - returns `bool` or list of `bools` when `$bools` are given e.g. false
// ? all - returns `bool` or list of `bools` on no `$bools` or one `$bools` given, e.g. true, false, true
// ? all - multiple `$bools` given returns list of `bools` mixed with list of `bools` if more than one is found e.g. (true, true), false
// ? If `$bools` are given and any that is not found is `null`.
@function bool($list, $occurrence: first, $operator: '==', $bool...) {
  @return select-type.type($list, $occurrence, bool, $operator, $bool...);
}

// Examples.
// @debug bool(('a', 'b', false, 'c', 2)); // false
// @debug bool(('a', 'b', true, 'c', 2)); // true
// @debug bool(('a', 'b', 'c', (true, '5', (6,)))); // null

// last
// @debug bool(('a', 'b', false, 'c', 2, true), last); // true

// first
// @debug bool(('a', 'b', false, 'c', 2, true), first); // false

// specific `bool` value
// @debug bool(('a', 'b', true, 'c', 2), any, '==', false); // `null`
// @debug bool(('a', 'b', true, 'c', 2), first, '==', true); // `true`
// @debug bool(('a', 'b', false, 'c', 2), first, '==', true); // null
// @debug bool(('a', 'b', false, 'c', 2, true), any, '==', false); // `false`

// all
// @debug bool(('a', 'b', true, 'c', 2, false, 3, true), all); // true, false, true

// all + specified
// @debug bool(('a', 'b', true, 'c', 2, false, 3, true), all, '==', true); // true, true
// @debug bool(('a', 'b', true, 'c', 2, false, 3, true), all, '==', true, false); // (true, true), false
