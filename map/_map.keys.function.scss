// Sass.
@use 'sass:list';
@use 'sass:map';

// Functions.
@use 'keys/keys.pattern.function' as map-keys-pattern;

// Status: DONE
// The `map.keys()` function retrieves all keys or keys of `$search-keys`.
// @param `$map` A map to retrieve all keys or keys of `$search-keys`.
// @param `$search-keys...` Keys with pattern where '?=' is `list.index()`, '*' is substring, '^' is start, and '$' is end of `string` to retrieve from `$map`.
// @returns The returned value is a list of all keys or keys of `$search-keys`.
@function keys($map, $search-keys...) {
  @return list.length($search-keys) > 0
    and (map-keys-pattern.pattern($map, $search-keys...) or ())
    or map.keys($map);
}

// Examples.
// $-map: (
//   key: (
//     key1: 1
//   ),
//   list1: (),
//   list2: (),
//   (list1, list2): (),
//   list1 list2: (),
//   a b c d e f: value,
//   a: (
//     b: (
//       c: (
//         d: e,
//       ),
//     ),
//   ),
//   any: true,
//   all: false,
//   separator: auto,
//   bracketed: false,
//   method: join,
//   null: false,
//   false: null,
//   'false': null
// );

// default
// @debug keys($-map); //  key, list1, list2, (list1, list2), list1 list2, a b c d e f, a, any, all, separator, bracketed, method, null, false, "false"

// '?=' find keys with `list.index()`
// @debug keys($-map, '?=list1'); // list1, (list1, list2), list1 list2

// '^'
// @debug keys($-map, '^sep'); // separator
// @debug keys($-map, '^sep', '^sep'); // (separator,)
// @debug keys($-map, 'sep^'); // (separator,)
// @debug keys($-map, '^rac'); // ()

// '$'
// @debug keys($-map, '$tor'); // (separator,)
// @debug keys($-map, '$ara'); // ()
// @debug keys($-map, 'tor$'); // (separator,)

// '~='
// @debug keys($-map, '~=ara'); // (separator,)
// @debug keys($-map, 'ara~='); // (separator,)

// '*'
// @debug keys($-map, '*ara'); // (separator,)

// 'value:' 
// @debug keys($-map, 'value:bool'); // any, all, bracketed, null
// @debug keys($-map, 'value:list'); // list1, list2, (list1, list2), list1 list2

// 'key:'
// @debug keys($-map, 'key:bool'); // (false,)
// @debug keys($-map, 'key:string'); // key, list1, list2, a, any, all, separator, bracketed, method, "false"
