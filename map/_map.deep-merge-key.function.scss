// Sass.
@use 'sass:map';

// Functions.
@use '../list/list.append.function' as list-append;

// Status: DONE
// The `map.deep-merge-key()` function merges `$map` with retrieved values from required `$key` and optional `$nested-keys`  of `$map`.
// @param `$map` A map to merge with retrieved value from key or nested key of this map.
// @param `$key` Required key to merge with `$map`.
// @arbitrary `$nested-keys...` Optional nested keys to get the value to merge with `$map`.
// @returns The returned value is a map merged with the values retrieved from required `$key` and optional `$nested-keys`.
@function deep-merge-key($map, $key, $nested-keys...) {
  $keys: list-append.append((), $key, comma, $nested-keys...);
  @return map.deep-remove(
    map.deep-merge($map, map.get($map, $keys...) or ()),
    $keys...
  );
}

// Examples.
// $example: (
//   "name": first name,
//   "age": 25,
//   "Helvetica": (
//     "weights": (
//       "regular": 400,
//       "medium": 500,
//       "bold": 700
//     ),
//     "size": (
//       "regular": small,
//       "medium": big,
//       "high": extra big
//     )
//   )
// );

// key of string
// @debug deep-merge-key((a: 1, b: 2, key: (c: 3, d: 5)), key); // (a: 1, b: 2, c: 3, d: 5)

// nested key
// @debug deep-merge-key($example, "Helvetica", "size"); // ("name": first name, "age": 25, "Helvetica": ("weights": ("regular": 400, "medium": 500, "bold": 700)), "regular": small, "medium": big, "high": extra big)
// @debug deep-merge-key($example, "Helvetica", "weights"); // ("name": first name, "age": 25, "Helvetica": ("size": ("regular": small, "medium": big, "high": extra big)), "regular": 400, "medium": 500, "bold": 700)
