// Sass.
@use 'sass:list';
@use 'sass:map';

// Variables.
@use 'function.variables';

// Functions.
@use 'function.get.function' as *;

// Status: DONE
// The `function.pick()` function.
@function pick($value, $name: null, $prefix: variables.$prefix, $default: get, $function: variables.$function) {
  @if type-of($value) == list or type-of($value) == string or type-of($value) == map {
    @if type-of($value) == map { $value: map.keys($value); }
    @if $name {
      @each $name in $name {
        @if list.index($value, $prefix + $name) {
          @return get($name, $default);
        }
      }
      @return null;
    } @else {
      @each $name, $function in $function {
        @if list.index($value, $prefix + $name) {
          @return $function;
        }
      }
      @if list.length($value) > 0 {
        @if get(nth($value, 1)) {
          @return get(nth($value, 1));
        }
      }
    }
  }
  @return get($default);
}

// Examples.
// @debug pick(--get unit 2); // get-function("get")
// @debug pick(--color unit 1); // get-function("color")
// @debug pick(--nest (padding, margin) top); // get-function("nest")
// @debug pick(unit 2 --get red); // get-function("get")
// @debug pick(primary (--get: dark) color); // get-function("get")

// from map
// @debug pick((--class: unit 2)); // get-function("class")
// @debug pick((--get: unit 2)); // get-function("get")
// @debug pick((--color: unit 2)); // get-function("color")
// @debug pick((--wrong: unit 2)); // get-function("get")
// @debug pick(((list: set-nth): unit 2)); // get-function("set-nth")

// specific name
// @debug pick(--get unit 2, get); // get-function("get")
// @debug pick(--color unit 2, color); // get-function("color")
// @debug pick(--nest (padding, margin) top); // get-function("nest")
// @debug pick(--color unit 2, get color); // get-function("color")
// @debug pick(--nest (padding, margin) top, color nest); // get-function("nest")

// @debug pick(--get unit 2, color); // null
// @debug pick(--get unit 2, color combine); // null
// @debug pick(--color unit 2, get); // null
// @debug pick(--nest (padding, margin) top, color); // null

// default
// @debug pick(--wrong unit 2, wrong); // get-function("get")
// @debug pick(--wrong unit 2, wrong, $default: color); // get-function("color")
