// Object.
@use 'object.var' as object;

// Modules.
@use '../map';

// Functions.
@use 'object.get-key.function' as *;

// Status: DONE
// The `object.get()` function gets object, optionally value of this object retrieved from key.
// To get the value from different object than in use pass `$key` as map where (name: key).
// @param `$key` An optional key of object in use to get value, or object with key.
// @param `$fallback` Fallback value if retrieved is `null`.
// @returns The returned value is `map` from variable `object.$object`(optionally value from `$key`), by default from last created or set by `object.use()` object.
@function get($key: null, $fallback: null) {
  @if type-of($key) == map {
    @each $name, $key in $key {
      @return map.get(object.$object, get-key($name, $key), $fallback);
    }
  }
  @return map.get(object.$object, get-key($key: $key), $fallback);
}
