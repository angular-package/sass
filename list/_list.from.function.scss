// Sass.
@use 'sass:list';

// Functions.
@use '../math/math.range.function' as math-range;
@use 'list.nths.function' as list-nths;

// Status: DONE
// The `list.from()` function returns the list of elements from index `$from` to the end of `$list`.
// @param `$list` The list from which the elements are picked.
// @param `$from` A number-type element index of `$list`.
// @returns The returned value is the list of elements from index `$from` to the last index of `$list`.
@function from($list, $from) {
  @return $from <= list.length($list) and
    list-nths.nths($list, math-range.range($from, list.length($list), 1, 0)...)
    or null;
}

// Examples.
// @debug from((('a', 'b', 'c'),), 1); // (('a', 'b', 'c'),)

// @debug from((('a', 'b', 'c'), 'a', 'b', c, d, 2, 4, 5, (a: 1)), 0); // ("a", "b", "c"), "a", "b", c, d, 2, 4, 5, (a: 1)
// @debug from((('a', 'b', 'c'), 'a', 'b', c, d, 2, 4, 5, (a: 1)), -1); // (a: 1), ("a", "b", "c"), "a", "b", c, d, 2, 4, 5, (a: 1)
// @debug from((('a', 'b', 'c'), 'a', 'b', c, d, 2, 4, 5, (a: 1)), 1); // ("a", "b", "c"), "a", "b", c, d, 2, 4, 5, (a: 1)

// @debug from(('a', 'b', c, d, 2, 4, 5, (a: 1)), 4); // d, 2, 4, 5, (a: 1)
// @debug from(('a', 'b', c, d, 2, 4, 5, (a: 1)), 7); // 5, (a: 1)

// negative index
// @debug from((('a', 'b', 'c'), ), -3); // null, null, ("a", "b", "c"), ("a", "b", "c")
