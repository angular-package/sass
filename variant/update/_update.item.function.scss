// Sass.
@use 'sass:list';
@use 'sass:meta';

// Modules.
@use '../../class';
@use '../../map';
@use '../../values';

// Status: DONE
// The `update.item()` function.
// @param `$item`
// @param `$class`
// @param `$property`
// @param `$key`
// @returns
@function item($item, $class: null, $property: null, $key: base) {
  $result: ();
  @if type-of($item) == map {
    @each $-class, $prop in $item {
      $result: (
        if(
          meta.type-of($class) == map,
          class.affix-add($-class, $class),
          $-class
        ): map.get($property, $key, $property) or $prop
      );
    }
  } @else {
    $class: if(
      meta.type-of($class) == map,
      class.affix-add($item, $class),
      $class or $item
    );
    @if $property {
      $result: (
        $class: map.get($property, $key, $property)
      );
    } @else {
      @return $class;
    }
  }
  @return $result;
}

// Examples.
// @debug modify((primary: primary light), (prefix: p, suffix: s));
// @debug modify((primary: primary light), (prefix: spectre, suffix: end));
