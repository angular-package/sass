// Functions.
@use 'color.color.mixin' as *;

// Status: DONE
// The `color.background-color()` mixin.
// @param `$color`
// @param `$hue`
// @param `$saturation`
// @param `$lightness`
// @param `$alpha`
// @param `$fallback`
// @param `$important`
// @param `$selector`
// @param `$dictionary`
@mixin background-color(
  $color,
  $hue: null,
  $saturation: null,
  $lightness: null,
  $alpha: null,
  $fallback: null,
  $important: false,
  $selector: null,
  $dictionary: (),
) {
  @include color(
    (background-color: $color),
    $hue,
    $saturation,
    $lightness,
    $alpha,
    $fallback,
    $important,
    $selector,
    $dictionary
  );
}

// Examples.
// :host {
  // @include background-color(primary dark); // background-color: var(--s-primary-color-dark);

  // hsla color
  // @include background-color(primary dark ':hsla'); // background-color: hsla(var(--s-primary-color-h), var(--s-primary-color-s), var(--s-primary-color-l), var(--s-primary-color-a));
  // @include background-color((primary dark :hsla)); // background-color: hsla(var(--s-primary-color-h), var(--s-primary-color-s), var(--s-primary-color-l), var(--s-primary-color-a));

  // scheme
  // @include background-color((primary dark:hsla), $dictionary: (primary: p)); // background-color: hsla(var(--s-p-color-h), var(--s-p-color-s), var(--s-p-color-l), var(--s-p-color-a));
// }
