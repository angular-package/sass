// Sass.
@use 'sass:list';
@use 'sass:map';

// Functions.
@use '../list/list.append.function' as list-append;

// Status: DONE
// The `map.pick()` function picks required `$key` and optional `$keys` from `$map`.
// @param `$map` A map from which values of required `$key` and optional `$keys` are taken.
// @param `$key` Required key to pick from `$map`.
// @arbitrary `$keys...` List of keys to pick the values from `$map`.
// @returns The returned value is a copy of `$map` built of required `$key` and optional `$keys`, if keys are not found returns `null`.
@function pick($map, $key, $keys...) {
  $result: ();
  @each $key in list-append.append((), $key, comma, $keys...) {
    $result: map.has-key($map, $key) and map.merge($result, ($key: map.get($map, $key))) or $result;
  }
  @return list.length($result) > 0 and $result or null;
}

// Examples.
// $-theme: (
//   dark: (
//     'dark.palette': (),

//     basic large: (
//       '': border,
//       dark: border dark,
//       light: border light
//     ),
//   ),
//   basic: (
//     'default.palette': (),

//     'gray.palette': (
//       'gray': 'gray' color,
//       'gray' dark: 'gray' dark,
//       'gray' light: 'gray' light
//     ),

//     'bg.palette': (
//       bg: bg color,
//       bg dark: bg dark,
//       bg light: bg light
//     ),

//     basic large: (
//       '': border,
//       dark: border dark,
//       light: border light
//     ),

//     extended small: (
//       '': primary,
//       dark: primary dark,
//       light: primary light
//     ),

//     [primary]: (
//       primary dark: primary dark,
//     ),
//   )
// );

// @debug pick((a: 1, b: 2, c: 3, d: 4), a, b, d); // (a: 1, b: 2, d: 4)
// @debug pick((a: 1, b: 2, c: 3, d: 4), (a, b, d)); // null

// string
// @debug pick(map.get($-theme, basic), 'default.palette'); // ("default.palette": ())
// @debug pick(map.get($-theme, basic), 'default.palette', 'bg.palette'); // ("default.palette": (), "bg.palette": (bg: bg color, bg dark: bg dark, bg light: bg light))

// list space-separated
// @debug pick(map.get($-theme, basic), basic large); // (basic large: ("": border, dark: border dark, light: border light))

// bracketed + list space-separated
// @debug pick(map.get($-theme, basic), [primary], basic large); // ([primary]: (primary dark: primary dark), basic large: ("": border, dark: border dark, light: border light))
