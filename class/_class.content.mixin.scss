// Sass.
@use 'sass:meta';

// Modules.
@use '../function';

// Functions.
@use '../selector/selector.class.function' as *;

// Status: DONE
// The `class.content()` mixin sets class selector `$class` with optional `$pseudo-class`, translated with `$dictionary`.
// @param `$class` Class selector to put `@content` inside.
// @param `$pseudo-class` Pseudo class for `$class` selector.
// @param `$dictionary` Dictionary for `$class` selector.
// @param `$function` Function to set `$class` selector.
@mixin content(
  $class,
  $pseudo-class: (),
  $dictionary: (),
  $function: meta.get-function(class)
) {
  #{meta.call($function, $class, $pseudo-class, $dictionary)} {
    @content;
  }
}

// Examples.
// @include content(disabled) { cursor: crosshair; } // .disabled { cursor: crosshair; }

// pseudo-class
// @include content(disabled, ':hover') { cursor: crosshair; } // .disabled:hover { cursor: crosshair; }

// dictionary
// @include content(disabled, ':hover', (disabled: d)) { cursor: crosshair; } // .d:hover { cursor: crosshair; }

// multiple classes
// @include content(((disabled, pagination disabled),), ':hover') { cursor: crosshair; } // .disabled:hover, .pagination-disabled:hover { cursor: crosshair; }
// @include content(((disabled, pagination disabled, ),), (':hover', ':visited')) { cursor: crosshair; }
// .disabled:hover, .disabled:visited, .pagination-disabled:hover, .pagination-disabled:visited {
//   cursor: crosshair;
// }
