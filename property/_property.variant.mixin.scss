// Sass.
@use 'sass:list';
@use 'sass:map';

// Variables.
@use '../function/variables';

// Functions.
@use 'property.set.mixin' as property;

// Modules.
@use '../class';
@use '../values';

// Status: DONE
// Property `property.variant()` mixin.
@mixin variant($variant: (), $important: null, $pseudo-class: (), $dictionary: (), $function: variables.$function) {
  @if type-of($variant) == map {
    @each $key, $value in $variant {
      @if type-of($value) == list or type-of($value) == string {
        $variant: map.set($variant, $key, values.variant(if(list.separator($value) == comma, $value, ($value,))...));
      }
    }
    @include class.variant($variant, $pseudo-class, $dictionary, $function, map) using($resolved) {
      @if type-of(map.get($resolved, value)) == map {
        @each $attribute, $value in map.get($resolved, value) {
          @include property.set((list.join(map.get($resolved, property), map.get($resolved, attribute) $attribute or ()): $value), $important, $dictionary, $function, true);
        }
      } @else {
        @include property.set((list.join(map.get($resolved, property), map.get($resolved, attribute) or ()): map.get($resolved, value)), $important, $dictionary, $function, true);
      }
    }
  }
}
