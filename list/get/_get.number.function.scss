// Functions.
@use 'get.type.function' as get-type;

// Status: DONE
// The `get.number()` function returns any, first or last occurring number, or all occurred numbers.
// @param `$list` A list from which occurring numbers are retrieved.
// @param `$occurrence` All, any, first or last occurrence of the retrieved numbers from `$list`.
// @returns The returned value is occurred any, first, last number or all occurred numbers retrieved from `$list` or `null`.
@function number($list, $occurrence: first) {
  @return get-type.type($list, $occurrence, number);
}

// Examples.
// occurrence: first by default
// @debug number(('a', 'b', 'c', 2)); // `2`
// @debug number(('a', 'b', 'c', 2), first); // `2`

// occurrence: any
// @debug number(('a', 'b', 'c', (3))); // `3`
// @debug number(('a', 'b', 'c', (4, ))); // `null`
// @debug number(('a', 'b', 'c', ('5', (6,)))); // `null`

// occurrence: last
// @debug number(('a', 5, 'b', 2, 'c', (4, ))); // 5

// occurrence: all
// @debug number((3, 'a', 0, 'b', 1, 'c', 2), all); // 3, 0, 1, 2
// @debug number(('a', 5, 'b', 2, 'c', (4, )), all); // 5, 2
// @debug number(('a', 3, 'b', 2, 4, 2, 7, 2, 'b', 'c', 2), all); // 3, 2, 4, 2, 7, 2, 2
// @debug number(('a', 3, 'b', 2, 4, 8, 2, 7, 2, 'b', 'c', 2), all); // 3, 2, 4, 8, 2, 7, 2, 2
// @debug number(('a', 3, 'b', 2, 4, 8, 2, 7, 2, 'b', 'c', 2), first); // 3
// @debug number(('a', 3, 'b', 2, 4, 8, 2, 7, 2, 'b', 'c', 2), last); // 2
