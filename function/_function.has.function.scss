// Sass.
@use 'sass:list';
@use 'sass:map';
@use 'sass:meta';

// Functions.
@use 'function.is.function' as *;

// Status: DONE
// The `function.has()` function checks whether `$value` contains existing function or from `$functions` in a form `module-function args...`.
// @param `$value` Value to check against existence function in a form `module-function args...`.
// @param `$prefixes` Available prefixes of the function in `$value`.
// @param `$separators` Available separators between module and function in string type function name.
// @param `$functions` Additional functions of `map` type to check in `$value`.
// @returns The returned value is a `bool` indicating whether `$value` contains existing function.
@function has(
  $value,
  $prefixes: null,
  $separators: null,
  $functions: null,
) {
  @for $i from 1 through list.length($value) {
    $element: list.nth($value, $i);
    @if meta.type-of($element) == map {
      $element: map.keys($element);
    }
    @if meta.type-of($element) == list and list.length($element) > 0 {
      $element: list.nth($element, 1);
    }
    @if is($element, $prefixes, $separators, $functions) {
      @return true;
    }
  }
  @return false;
}

// Alias name.
@function value-has(
  $value,
  $prefixes: null,
  $separators: null,
  $functions: null,
) {
  @return has($value, $prefixes, $separators, $functions);
}

// Examples.
// $prefixes: ('--', '__', '@', '&', '+', '/') !default;
// $separators: ('-', '_', '.') !default;

// list
// @debug has(--selector-nest (unit 2), $prefixes, $separators); // true
// @debug has((unit 2) --selector-nest, $prefixes, $separators); // true
// @debug has(3px solid --selector-nest (primary dark), $prefixes, $separators); // true

// nested list
// @debug has(10px (--selector-nest (unit 10)) 15px (unit 2), $prefixes, $separators); // true

// map
// @debug has((--selector-nest: (unit 2)), $prefixes, $separators); // true

// nested map
// @debug has(10px (--selector-nest: (unit 10)) 15px (unit 2), $prefixes, $separators); // true

// prefix
// @debug has(__selector-nest (unit 2), __); // true
// @debug has(-_-selector-nest (unit 2), -_-); // true

// false
// @debug has(primary color, $prefixes, $separators); // false
