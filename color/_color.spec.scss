// @forward 'color';
@use '../color';
@use 'sass:list';

// Scheme.
// @debug color.scheme-is(normal); // true
// @debug color.scheme-is-normal(); // true
// @debug color.scheme-is-dark(); // false
// @debug color.scheme-is-light(); // false

// functions
// @debug color.alpha-var(primary); // var(--s-primary-color-a)
// @debug color.color(primary); //  hsla(var(--s-primary-color-h), var(--s-primary-color-s), calc(var(--s-primary-color-l) + var(--s-primary-color-l-l)), var(--s-primary-color-a))
// @debug color.get-theme-colors(('red.colors': (a: 1), ), 'red.colors'); //  (("": ((("a": 1),))),)
// @debug color.has((border: #ffffff, background: #aaaaaa), border); // true
// @debug color.hsla-color(primary); // hsla(var(--s-primary-color-h), var(--s-primary-color-s), calc(var(--s-primary-color-l) + var(--s-primary-color-l-l)), var(--s-primary-color-a))
// @debug color.hue-var(dark); // var(--s-dark-color-h)
// @debug color.lightness-level-var(dark); // var(--s-dark-color-l-l)
// @debug color.name(dark); // dark color
// @debug color.saturation-var(light); // var(--s-light-color-s)

// color.variant()
// @include color.variant((border: primary, background: secondary));
// @include color.variant-create((border: (top: (primary: primary dark))), $modifier: (property: (base: outline)));

// color.variant-create()
// 1.
// @include color.variant-create((border: primary dark));

// 2.
// @include color.variant-create((border: (primary: primary dark)));

// 3.
// @include color.variant-create((border: (top: (primary: primary dark))));

// 4.
// @include color.variant-create((border: (top: (left: (primary: primary dark)))));
// @include color.variant-create((border: (block: ((start, end): (primary: primary dark)))));
