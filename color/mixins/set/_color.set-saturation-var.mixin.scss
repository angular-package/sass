// Sass.
@use 'sass:color';
@use 'sass:meta';

// Functions.
@use '../../functions/color.name.function' as *;
@use '../../functions/color.saturation-var.function' as *;

// Modules.
@use '../../../math';
@use '../../../var';

// Status: DONE
// The `color.set-saturation-var()` mixin.
// @param `$name`
// @param `$saturation`
// @param `$adjust`
// @param `$dictionary`
@mixin set-saturation-var(
  $name,
  $saturation: null,
  $adjust: null,
  $dictionary: ()
) {
  @if (meta.type-of($saturation) == string and not var.is($saturation)) or meta.type-of($saturation) == list {
    $saturation: saturation-var($saturation, $adjust, null, $dictionary);
  } @else {
    $saturation: if(meta.type-of($saturation) == color, color.saturation($saturation), $saturation);
    $saturation: if(
      $adjust,
      math.calculate(
        $saturation,
        if(meta.type-of($adjust) == list, $adjust, '+' $adjust)...
      ),
      $saturation
    );
  }
  @include var.set((name($name, saturation): $saturation), $dictionary: $dictionary);
}

// Examples.
// :host {
  // number
  // @include set-saturation-var(orange, 30.33%); // --s-orange-color-s: 30.33%;
  // @include set-saturation-var(orange dark, 30.66%); // --s-orange-color-dark-s: 30.66%;

  // hex
  // @include set-saturation-var(orange, #ffa500); // --s-orange-color-s: 100%;

  // relative
  // @include set-saturation-var(orange, orange light); // --s-orange-color-s: var(--s-orange-color-light);

  // number + adjust
  // @include set-saturation-var(orange, 30.33%, '+' 5%); // --s-orange-color-s: 35.33%;
  // @include set-saturation-var(orange, 30.33%, '/' 5%); // --s-orange-color-s: 6.066%;
  // @include set-saturation-var(orange, 30.33%, '*' 0.5); // --s-orange-color-s: 15.165%;

  // hex + adjust
  // @include set-saturation-var(orange, #ffa500, -20%); // --s-orange-color-s: 80%;
  // @include set-saturation-var(orange, #ffa500, 20%); // --s-orange-color-s: 120%;

  // relative + backup
  // @include set-saturation-var(orange, orange light (backup: #ffa500)); // --s-orange-color-s: var(--s-orange-color-light-s, #ffa500);

  // relative + backup + adjust
  // @include set-saturation-var(orange, orange light (adjust: 5%, backup: #ffa500)); // --s-orange-color-s: calc(var(--s-orange-color-light-s, #ffa500) + 5%);
// }
