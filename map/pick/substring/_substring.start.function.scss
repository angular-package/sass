// Sass.
@use 'sass:list';
@use 'sass:map';
@use 'sass:meta';

// Functions.
@use '../../../string/string.starts-with.function' as string-starts-with;

// Status: DONE
// The `pick.substring-start()` function returns a copy of `$map` with keys of start substrings.
// @param `$map` A map from which keys of start substrings are picked.
// @param `$substring-start` Substring start of key to pick from `$map`.
// @arbitrary `$substrings-start...` List of start substrings of keys to pick from `$map`.
// @returns The returned value is a copy of `$map` with keys associated with start substrings.
@function start($map, $substring-start, $substrings-start...) {
  $keys: ();
  @each $key in map.keys($map) {
    @if meta.type-of($key) == string {
      $keys: list.append($keys, $key);
    }
  }
  @if list.length($keys) > 0 {
    $result: ();
    @each $substring in list.join(($substring-start,), $substrings-start, comma) {
      @each $key in $keys {
        $result: map.deep-merge(
          $result,
          string-starts-with.starts-with($key, $substring)
            and ($key: map.get($map, $key))
            or ()
        );
      }
    }
    @if list.length($result) > 0 {
      @return $result;
    }
  }
  @return null;
}

// Alias `map.pick-key-start-substring()` to `map.pick-substring-start()`.
@function key-substring-start($map, $substring-start, $substrings-start...) {
  @return end($map, $substring-start, $substrings-start...);
}

// Examples.
// $-theme: (
//   dark: (
//     'dark.palette': (),

//     basic large: (
//       '': border,
//       dark: border dark,
//       light: border light
//     ),
//   ),
//   basic: (
//     '9971test': 1,
//     '2test': 2,
//     '3test': 3,
//     '4test': 4,
//     '5test': 5,

//     'test9971': 1,
//     'test2': 2,
//     'test3': 3,
//     'test4': 4,
//     'test5': 5,

//     'default.palette': (),

//     'gray.palette': (
//       'gray': 'gray' color,
//       'gray' dark: 'gray' dark,
//       'gray' light: 'gray' light
//     ),

//     'bg.palette': (
//       bg: bg color,
//       bg dark: bg dark,
//       bg light: bg light
//     ),

//     basic large: (
//       '': border,
//       dark: border dark,
//       light: border light
//     ),

//     extended small: (
//       '': primary,
//       dark: primary dark,
//       light: primary light
//     ),

//     [primary]: (
//       primary dark: primary dark,
//     ),

//     (key1, key2): (
//       primary: primary1
//     ),

//     key1: primary,

//     // calculation
//     calc(400px + 10%): calculation,
//     calculation: calc(400px + 10%),

//     // bool
//     false: bool,
//     bool: false,

//     // color
//     #fff: color,
//     color: #fff,

//     // function
//     get-function(append): function,
//     function: get-function(append),

//     // map
//     (a: 1, b: 2): map,
//     map: (a: 1, b: 2),

//     // null
//     'null': null,
//     null: 'null',

//     // number
//     15: number,
//     number: 15,

//     // string
//     firstname: string,
//     string: firstname,
//   )
// );

// @debug start(map.get($-theme, basic), 'key1'); // (key1: primary)
// @debug start(map.get($-theme, basic), 'test'); // ("test9971": 1, "test2": 2, "test3": 3, "test4": 4, "test5": 5)
// @debug start(map.get($-theme, basic), 15); // null
