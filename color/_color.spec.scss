// @forward 'color';
@use '../color';
@use 'sass:list';

// ---
// Functions.
// ---
// @debug color.alpha-var(primary); // var(--s-primary-color-a)
// @debug color.color(primary); //  hsla(var(--s-primary-color-h), var(--s-primary-color-s), calc(var(--s-primary-color-l) + var(--s-primary-color-l-l)), var(--s-primary-color-a))
// @debug color.hsla-color(primary); // hsla(var(--s-primary-color-h), var(--s-primary-color-s), calc(var(--s-primary-color-l) + var(--s-primary-color-l-l)), var(--s-primary-color-a))
// @debug color.hue-var(dark); // var(--s-dark-color-h)
// @debug color.name(dark); // dark color
// @debug color.saturation-var(light); // var(--s-light-color-s)

// ---
// Mixins.
// ---
// :host {
//   @include color.set-alpha-var(primary, 0.5);
//   @include color.set-hsla-color(primary dark, 200deg, 84%, 4.9020%, 0.5);
//   @include color.set-hue-var(primary, 20deg);
//   @include color.set-lightness-var(primary, 30.33%, '+' 5%);
//   @include color.set-saturation-var(orange, 30.33%);
// }

// div {
//   @include color.background-color(primary dark);
//   @include color.background(primary dark);
//   @include color.color(primary dark);
//   @include color.scheme-color(( normal: primary dark, light: primary light ));
// }

// ---
// Name.
// ---
// @debug color.name-indicator-add-multiple(accent, primary, secondary  dark, secondary light, primary dark);
// @debug color.name-indicator-add((primary dark, 3%));
// @debug color.name-adjust-multiple(accent test1, primary test2, secondary test3, ((name: secondary test3, lightness: 3%, alpha: 0.5), ()));
// @debug color.name-adjust((primary color, 15%, ), (hue: 15deg, saturation: 3%, lightness: 1%, alpha: 0.2), 3deg, 1%, 1%, 0.1);
// @debug color.name-append((accent color, primary color, secondary color dark), auto, secondary light, (primary dark, 5%)); //  accent color, primary color, secondary color dark, secondary color light, (primary color dark, 5%)
// @debug color.name-create(primary-dark, hue, '-'); // primary color dark hue
// @debug color.name-index((primary color dark, 15%), primary dark); // 1, 3
// @debug color.name-nest(basic, (color, ((test dark) 3% 0.5), light)); // basic color, (basic test dark) 3% 0.5, basic light
// @debug color.name-remove((accent color, (primary, 1%), (secondary dark, 3%)), secondary, primary); // (accent color,)
// @debug color.name-retrieve-multiple((primary dark, 50%)); // ((name: primary dark, lightness: 50%),)
// @debug color.name-retrieve((primary dark, 50% 40% 70% 60%));

// ---
// Palette.
// ---
$-palette-example-1: (
  accent: (
    accent color: (accent basic color, 3%),
    accent color dark: (accent basic color, 5%),
    accent color light: (accent basic color, 5%),
  ),

  primary: (
    primary color: (primary basic color, 3%),
    primary dark: (primary basic color, 5%),
    primary light: (primary basic color, 15%),
  ),
);

// @debug color.palette-color-add($-palette-example-1, accent, dark, auto, (secondary color light, 5%));

$-palette-example-2: (
  accent: (
    accent color: (accent basic color, 3%),
    accent color dark: (accent basic color, 5%),
    accent color light: (accent basic color, 5%),
  )
);

// @debug color.palette-color-remove($-palette-example-2, accent, dark, auto, (secondary color light, 5%));

// create()
// @debug color.palette-create(((+accent, primary): (color, ((basic dark) 3% 0.5) (light, 10%) (dark, 5%), light, dark)));

// variant-add()
// @debug color.palette-variant-add($-palette-example-1, primary, primary #{gray}, auto, (primary dark, 15%), (primary light, 15%));

// ---
// Scheme.
// ---
// @debug color.scheme-is(normal); // true
// @debug color.scheme-is-normal(); // true
// @debug color.scheme-is-dark(); // false
// @debug color.scheme-is-light(); // false

// @debug color.scheme-has();



// color.variant()
// @include color.variant((border: primary, background: secondary));
// @include color.variant-create((border: (top: (primary: primary dark))), $modifier: (property: (base: outline)));

// color.variant-create()
// 1.
// @include color.variant-create((border: primary dark));

// 2.
// @include color.variant-create((border: (primary: primary dark)));

// 3.
// @include color.variant-create((border: (top: (primary: primary dark))));

// 4.
// @include color.variant-create((border: (top: (left: (primary: primary dark)))));
// @include color.variant-create((border: (block: ((start, end): (primary: primary dark)))));
