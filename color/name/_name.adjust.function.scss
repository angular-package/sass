// Sass.
@use 'sass:list';
@use 'sass:map';

// Modules.
@use 'adjustment';

// Functions.
@use '../../list/list.append.function' as list-append;
@use '../../list/list.insert-nth.function' as list-insert-nth;

// Module functions.
@use 'name.retrieve.function' as *;

// Status: DONE
// The `color.name-adjust()` function adjusts `$name` with `$adjust`.
// @param `$name`
// @param `$adjust`
// @param `$hue`
// @param `$saturation`
// @param `$lightness`
// @param `$alpha`
// @param `$separator`
// @returns
@function adjust(
  $name,
  $adjust: null,
  $hue: null,
  $saturation: null,
  $lightness: null,
  $alpha: null,
  $separator: map.get($adjust, separator) or list.separator($name),
  $adjustment: retrieve($name)
) {
  $name: map.get($adjustment, name);

  // FEATURE: Calculate adjustments.
  $lightness: adjustment.calculate($lightness, map.get($adjustment, lightness), map.get($adjust, lightness), 0%);
  $alpha: adjustment.calculate($alpha, map.get($adjustment, alpha), map.get($adjust, alpha), 0);
  $hue: adjustment.calculate($hue, map.get($adjustment, hue), map.get($adjust, hue), 0deg);
  $saturation: adjustment.calculate($saturation, map.get($adjustment, saturation), map.get($adjust, saturation), 0%);

  // Add hue, saturation, lightness or alpha to color name.
  @if $lightness and $lightness > 0% {
    $name: list-append.append(($name,), $lightness, $separator);
    @if $alpha and $alpha > 0 {
      $name: list-append.append($name, $alpha, $separator);
      @if $hue and $hue > 0deg {
        $name: list-insert-nth.insert-nth($name, 2, $hue);
        @if $saturation and $saturation > 0% {
          $name: list-insert-nth.insert-nth($name, 3, $saturation);
        }
      }
    }
  }
  @return $name;
}

// Examples.
// $lightness
// $lightness $alpha
// $hue $lightness $alpha
// $saturation $lightness $alpha
// $hue $saturation $lightness $alpha

// @debug adjust(primary, (alpha: 0.1), $lightness: 15%); // primary color
// @debug adjust((primary color, 15%), (alpha: 0.1));
// @debug adjust((primary color, 15%), (hue: 15deg));

// Lightness
// @debug adjust((primary color, 15%), (lightness: -3%), $lightness: 4%); // primary color, 16%

// Lightness + alpha
// @debug adjust((primary color, 15%, 0.1), (lightness: -3%, alpha: 0.5), $lightness: 4%, $alpha: 0.4); // primary color, 16%, 1

// Saturation/hue + lightness + alpha
// @debug adjust((primary color, 3deg, 15%, 0.5), (hue: 15deg), 3deg); //

// All
// @debug adjust((primary color, 15%, ), (hue: 15deg, saturation: 3%, lightness: 1%, alpha: 0.2), 3deg, 1%, 1%, 0.1);
