// Sass.
@use 'sass:color';
@use 'sass:meta';

// Functions.
@use '../../functions/color.lightness-var.function' as *;
@use '../../functions/color.name.function' as *;

// Modules.
@use '../../../math';
@use '../../../var';

// Status: DONE
// The `color.set-lightness-var()` mixin.
// @param `$name`
// @param `$lightness`
// @param `$adjust`
// @param `$dictionary`
@mixin set-lightness-var(
  $name,
  $lightness: null,
  $adjust: null,
  $dictionary: ()
) {
  @if (meta.type-of($lightness) == string and not var.is($lightness)) or meta.type-of($lightness) == list {
    $lightness: lightness-var($lightness, $adjust, null, $dictionary);
  } @else {
    $lightness: if(meta.type-of($lightness) == color, color.lightness($lightness), $lightness);
    $lightness: if(
      $adjust,
      math.calculate(
        $lightness,
        if(meta.type-of($adjust) == list, $adjust, '+' $adjust)...
      ),
      $lightness
    );
  }
  @include var.set((name($name, lightness): $lightness), $dictionary: $dictionary);
}

// Examples.
// :host {
  // number
  // @include set-lightness-var(primary, 30.33%, '+' 5%); // --s-primary-color-l: 30.33%;
  // @include set-lightness-var(primary, 30.66%); // --s-primary-color-l: 30.66%;

  // number + adjust
  // @include set-lightness-var(primary, 30.33%, 5%); // --s-primary-color-l: 35.33%;

  // hex
  // @include set-lightness-var(blue, #5755d9); // --s-blue-color-l: 85.2941176471%;

  // hex + adjust
  // @include set-lightness-var(primary, #5755d9, 5%); // --s-primary-color-l: 90.2941176471%;

  // relative var()
  // @include set-lightness-var(primary, var(--s-any-color), 5%); // --s-primary-color-l: calc(var(--s-any-color-l) + 5%);

  // relative create name
  // @include set-lightness-var(primary, any, 5%); // --s-primary-color-l: calc(var(--s-any-color-l) + 5%);
  // @include set-lightness-var(primary, secondary, 5%); // --s-primary-color-l: calc(var(--s-secondary-color-l) + 5%);

  // relative + backup
  // @include set-lightness-var(primary, secondary dark (backup: #5755d9)); // --s-primary-color-l: var(--s-secondary-color-dark-l, #5755d9);

  // relative + backup + adjust
  // @include set-lightness-var(primary, secondary dark (backup: #5755d9), 5%); // --s-primary-color-l: calc(var(--s-secondary-color-dark-l, #5755d9) + 5%);
  // @include set-lightness-var(primary, secondary dark (adjust: 5%, backup: #5755d9)); // --s-primary-color-l: calc(var(--s-secondary-color-dark-l, #5755d9) + 5%);

  // relative + adjust + dictionary
  // @include set-lightness-var(primary, secondary, 30%, (secondary: three)); // --s-primary-color-l: calc(var(--s-three-l-color) + 30%);
  // @include set-lightness-var(primary, secondary, 30%, (prefix: spectre, suffix: basic)); // --spectre-primary-color-l-basic: calc(var(--spectre-secondary-color-l-basic) + 30%);
// }
