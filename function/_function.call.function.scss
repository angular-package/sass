// Sass.
@use 'sass:map';
@use 'sass:meta';

// Functions.
@use 'function.get.function' as *;

// Status: DONE
// The `function.call()` function invokes function of `$name` with `$arguments`.
// It's designed to pass $name` as `map` or `string` type with prefix. Available prefixes are set under
// the `$prefix` sass variable ('---', '___', '--', '__', '-_-', '@', '&', '+', '/').
// Function name as `string` without prefix must be defined as follows `module-function` or `module.function`, and as `map`
// (module: function). Function name with prefix must be defined as follows `--module-function` or `--module-function`.
// @param `$name` Function name to call.
// @param `$config` Configure of `map` type with `prefix`, `separator` and `functions`,
// if `null` default values from `variables` are picked.
// @arbitrary `$arguments...` Arguments to pass into invoked function named `$name`.
// @returns The returned value is result of invoked function named `$name`.
@function call($name, $config: null, $arguments...) {
  @return meta.call(get($name, $config...), $arguments...);
}

// Examples.
// @debug call(--selector-nest, null, a, b, c);
