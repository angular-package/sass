// Functions.
@use 'select.type.function' as select-type;

// Status: DONE
// The `select.string()` function returns any, first or last occurring string, or all occurred string, also the specified strings.
// @param `$list` A list from which occurring strings are retrieved.
// @param `$occurrence` All, any, first or last occurrence of retrieved strings from `$list`.
// @param `$operator` Operator to compare with `$value`.
// @arbitrary `$strings...` Optional list of values to retrieve from  `$list`.
// @returns The returned value is a retrieved string, list of strings or `null`.
@function string($list, $occurrence: first, $operator: '==', $strings...) {
  @return select-type.type($list, $occurrence, string, $operator, $strings...);
}

// Examples.
// occurrence: first by default
// @debug string((1, 'a', 'b', 'c', 2)); // a
// @debug string((1, 2, 3, 'a', 'b', 'c', 2), first); // a

// occurrence: any
// @debug string(('a', 'b', 'c', (3))); // a
// @debug string(('a', 'b', 'c', (4, ))); // `null`
// @debug string(('a', 'b', 'c', ('5', (6,)))); // `null`

// occurrence: last
// @debug string(('a', 5, 'b', 2, 'c', (4, ))); // 5

// occurrence: all
// @debug string((3, 'a', 0, 'b', 1, 'c', 2), all); // "a", "b", "c"
// @debug string(('a', 'the', 5, 'sun', 'b', 2, 'c', (4)), all); // "a", "the", "sun", "b", "c"

// occurrence: all + value
// @debug string(('a', 3, 'b', 2, 4, 8, 2, 7, 2, 'b', 'c', 2), all, '==', 'c'); // c
// @debug string(('a', 3, 'b', 2, 'c', 4, 2, 7, 2, 'b', 'c', 2), all, '==','b', 'c'); // ("b", "b"), ("c", "c")
// @debug string(('a', 3, 'b', 2, 4, 8, 2, 7, 2, 'b', 'c', 2), first, '==', 'f'); // null
// @debug string(('a', 3, 'b', 2, 4, 8, 2, 7, 2, 'b', 'c', 2), last, '==', 'e'); // null

// occurrence: all + values
// @debug string(('a', 3, 'b', 2, 'c', 4, 'd', 8, 'e', 2, 7, 2, 'b', 'c', 2), all, '==', 'a', 'e', 'f', 'd'); // "a", "e", null, "d"
