// Variables.
@use 'dictionary.variables' as variables;

// Functions.
// @use 'dictionary.merge.function' as *; // INFO: For examples.

// Modules.
@use '../../../map';

// Status: DONE
// The `dictionary.pick()` function returns dictionaries from a global dictionary of the associated `$keys`.
// @param `$key` Key to pick dictionary from a global dictionary.
// @arbitrary `$keys...` Keys to pick the dictionaries from a global dictionary.
// @returns The return value is a dictionary consisting of dictionaries retrieved from a global dictionary of the associated `$keys`.
@function pick($key, $keys...) {
  @return map.pick(variables.$dictionary, $key, $keys...);
}

// Examples.
// $-dictionary: (
//   general: (word: słowo, (wrapper, wrap): owijka, technology: (action: akcja)),
//   class: (prefix: spectre-prefix, suffix: spectre-suffix, calendars: (calendar: cal), labels: (label: lab)),
//   prefix: spectre,
//   suffix: end,
//   separator: '--',
//   var: (prefix: spectre, suffix: end)
// );

// $-test: merge(null, $-dictionary);

// Examples.
// Pick the key
// @debug pick(general); // (general: (word: słowo, (wrapper, wrap): owijka, technology: (action: akcja)))

// Pick nested key
// @debug pick((class, calendars)); // (calendars: (calendar: cal))

// Pick multiple keys
// @debug pick(general, (class, calendars)); // (general: (word: słowo, (wrapper, wrap): owijka, technology: (action: akcja)), calendars: (calendar: cal))
