// FIXME:
// BUG:
// DEBUG:
// HACK:
// UGLY:
// FIX:
// IDEA:
// INFO:
// REVIEW:
// TSC:
// OPTIMIZE:
// TODO:


// @include variant(((class: border outline): ((top, right): (primary dark:  primary dark, secondary light: secondary light))), $property: (suffix: color));
// @include variant(((class: border outline): ((top, right): (primary dark:  primary dark, secondary light: secondary light))));

// (class+property: (class+property_side: (class: value)))
// (class+property: (class+property_side: (suffix: (class: value)))
// ((class: property): ((class: property_side): ((class: suffix): value)))


// Mixins.
@use 'variant.mixin' as *;

// TODO: hsla
// @include variant((border color: primary 'hsla'));
// @include variant((primary: primary, secondary: secondary));

// Examples.
// variant: (class: value)
// @include variant((border: primary, background: secondary));
// .border {
//   color: var(--s-primary-color);
// }
// .background {
//   color: var(--s-secondary-color);
// }

// @include variant(((border, outline) color: primary));
// .border-color, .outline-color {
//   color: var(--s-primary-color);
// }

// @include variant((border color: primary, background color: secondary));
// .border-color {
//   color: var(--s-primary-color);
// }
// .background-color {
//   color: var(--s-secondary-color);
// }

// @include variant((border color: primary dark, background color: secondary dark));
// .border-color {
//   color: var(--s-primary-color-dark);
// }
// .background-color {
//   color: var(--s-secondary-color-dark);
// }

// different property
// @include variant((border-color: (primary dark: primary dark, secondary light: secondary light)));
// .border-color-primary-dark {
//   border-color: var(--s-primary-color-dark);
// }
// .border-color-secondary-light {
//   border-color: var(--s-secondary-color-light);
// }

// @include variant((primary dark:  primary dark, secondary light: secondary light), $property: border-color);
// .primary-dark {
//   border-color: var(--s-primary-color-dark);
// }
// .secondary-light {
//   border-color: var(--s-secondary-color-light);
// }

// TODO: (primary light: primary light, secondary dark: secondary dark)
// @include variant((primary light: primary light, secondary dark: secondary dark), $property: (name: property, suffix: color));
// .primary-light {
//   property-color: var(--s-primary-color-light);
// }
// .secondary-dark {
//   property-color: var(--s-secondary-color-dark);
// }

// TODO: (border: (primary dark:  primary dark, secondary light: secondary light))
// @include variant((border: (primary dark:  primary dark, secondary light: secondary light)), $property: (suffix: color));
// .border-primary-dark {
//   border-color: var(--s-primary-color-dark);
// }
// .border-secondary-light {
//   border-color: var(--s-secondary-color-light);
// }

// TODO: (border: ((top, right): (primary dark:  primary dark, secondary light: secondary light)))
// @include variant((border: ((top, right): (primary dark:  primary dark, secondary light: secondary light))), $property: (name: border, suffix: color));
// .border-top-primary-dark {
//   border-top-color: var(--s-primary-color-dark);
// }
// .border-top-secondary-light {
//   border-top-color: var(--s-secondary-color-light);
// }
// .border-right-primary-dark {
//   border-right-color: var(--s-primary-color-dark);
// }
// .border-right-secondary-light {
//   border-right-color: var(--s-secondary-color-light);
// }

// TODO: (border: ((top, right) color: (primary dark:  primary dark, secondary light: secondary light)))
// @include variant((border: ((top, right) color: (primary dark:  primary dark, secondary light: secondary light))), $property: (name: border));
// .border-top-color-primary-dark, .border-right-color-primary-dark {
//   border-top-color: var(--s-primary-color-dark);
//   border-right-color: var(--s-primary-color-dark);
// }
// .border-top-color-secondary-light, .border-right-color-secondary-light {
//   border-top-color: var(--s-secondary-color-light);
//   border-right-color: var(--s-secondary-color-light);
// }

// TODO: (border basic: (((left, top): color): (primary dark:  primary dark, secondary light: secondary light)))
// @include variant((border basic: (((left, top): color): (primary dark:  primary dark, secondary light: secondary light))), $property: (name: border));
// .border-basic-left-color-primary-dark {
//   border-left-color: var(--s-primary-color-dark);
// }
// .border-basic-left-color-secondary-light {
//   border-left-color: var(--s-secondary-color-light);
// }
// .border-basic-top-color-primary-dark {
//   border-top-color: var(--s-primary-color-dark);
// }
// .border-basic-top-color-secondary-light {
//   border-top-color: var(--s-secondary-color-light);
// }

// multiple properties in one
// TODO: (border-color background: (primary dark:  primary dark, secondary light: secondary light))
// @include variant((border-color background: (primary dark:  primary dark, secondary light: secondary light)));
// .border-color-background-primary-dark {
//   border-color: var(--s-primary-color-dark);
//   background: var(--s-primary-color-dark);
// }
// .border-color-background-secondary-light {
//   border-color: var(--s-secondary-color-light);
//   background: var(--s-secondary-color-light);
// }

// TODO: (border background (color,): (primary dark:  primary dark, secondary light: secondary light))
// @include variant((border background (color,): (primary dark:  primary dark, secondary light: secondary light)));
// .border-background-color-primary-dark {
//   border: var(--s-primary-color-dark);
//   background: var(--s-primary-color-dark);
// }
// .border-background-color-secondary-light {
//   border: var(--s-secondary-color-light);
//   background: var(--s-secondary-color-light);
// }

// TODO: (border background (color,): (primary dark:  primary dark, secondary light: secondary light))
// @include variant((border background (color,): (primary dark:  primary dark, secondary light: secondary light)), $property: (suffix: color));
// .border-background-color-primary-dark {
//   border-color: var(--s-primary-color-dark);
//   background-color: var(--s-primary-color-dark);
// }
// .border-background-color-secondary-light {
//   border-color: var(--s-secondary-color-light);
//   background-color: var(--s-secondary-color-light);
// }

// TODO: (border background (xs, xl): (dark primary: primary dark, secondary: secondary light))
// @include variant((border background (xs, xl): (dark primary: primary dark, secondary: secondary light)));
// .border-background-xs-dark-primary, .border-background-xl-dark-primary {
//   border: var(--s-primary-color-dark);
//   background: var(--s-primary-color-dark);
// }
// .border-background-xs-secondary, .border-background-xl-secondary {
//   border: var(--s-secondary-color-light);
//   background: var(--s-secondary-color-light);
// }

// TODO: ((basic,) border background: (primary dark:  primary dark, secondary light: secondary light))
// @include variant(((basic,) border background: (primary dark:  primary dark, secondary light: secondary light)));
// .basic-border-background-primary-dark {
//   border: var(--s-primary-color-dark);
//   background: var(--s-primary-color-dark);
// }
// .basic-border-background-secondary-light {
//   border: var(--s-secondary-color-light);
//   background: var(--s-secondary-color-light);
// }

// multiple properties separately
// TODO: ((border, background): (primary dark:  primary dark, secondary light: secondary light))
// @include variant(((border, background): (primary dark:  primary dark, secondary light: secondary light)));
// TODO: (border: (primary dark:  primary dark, secondary light: secondary light), background: (primary dark:  primary dark, secondary light: secondary light))
// @include variant((border: (primary dark:  primary dark, secondary light: secondary light), background: (primary dark:  primary dark, secondary light: secondary light)));
// .border-primary-dark {
//   border: var(--s-primary-color-dark);
// }
// .border-secondary-light {
//   border: var(--s-secondary-color-light);
// }
// .background-primary-dark {
//   background: var(--s-primary-color-dark);
// }
// .background-secondary-light {
//   background: var(--s-secondary-color-light);
// }

// multiple properties each separately
// TODO: ((border background, outline caret): (primary dark:  primary dark, secondary light: secondary light))
// @include variant(((border background, outline caret): (primary dark:  primary dark, secondary light: secondary light)));
// .border-background-primary-dark {
//   border: var(--s-primary-color-dark);
//   background: var(--s-primary-color-dark);
// }
// .outline-caret-primary-dark {
//   outline: var(--s-primary-color-dark);
//   caret: var(--s-primary-color-dark);
// }
// .border-background-secondary-light {
//   border: var(--s-secondary-color-light);
//   background: var(--s-secondary-color-light);
// }
// .outline-caret-secondary-light {
//   outline: var(--s-secondary-color-light);
//   caret: var(--s-secondary-color-light);
// }

// TODO: (((basic,) border background, outline caret (color,)): (primary dark:  primary dark, secondary light: secondary light)), $property: (suffix: color)
// @include variant((((basic,) border background, outline caret (color,)): (primary dark:  primary dark, secondary light: secondary light)), $property: (suffix: color));
// .basic-border-background-primary-dark {
//   border-color: var(--s-primary-color-dark);
//   background-color: var(--s-primary-color-dark);
// }
// .outline-caret-color-primary-dark {
//   outline-color: var(--s-primary-color-dark);
//   caret-color: var(--s-primary-color-dark);
// }
// .basic-border-background-secondary-light {
//   border-color: var(--s-secondary-color-light);
//   background-color: var(--s-secondary-color-light);
// }
// .outline-caret-color-secondary-light {
//   outline-color: var(--s-secondary-color-light);
//   caret-color: var(--s-secondary-color-light);
// }

// class name separately from properties
// TODO: (border basic: border): (primary dark:  primary dark, secondary light: secondary light))
// @include variant(((border basic: border): (primary dark:  primary dark, secondary light: secondary light)));
// .border-basic-primary-dark {
//   border: var(--s-primary-color-dark);
// }
// .border-basic-secondary-light {
//   border: var(--s-secondary-color-light);
// }

// TODO: (((border basic, border extended): border): (primary dark:  primary dark, secondary light: secondary light))
// @include variant((((border basic, border extended): border): (primary dark:  primary dark, secondary light: secondary light)));
// @include variant((
//   (border basic: border): (primary dark:  primary dark, secondary light: secondary light),
//   (border extended: border): (primary dark:  primary dark, secondary light: secondary light)
// ));
// .border-basic-primary-dark {
//   border: var(--s-primary-color-dark);
// }
// .border-basic-secondary-light {
//   border: var(--s-secondary-color-light);
// }
// .border-extended-primary-dark {
//   border: var(--s-primary-color-dark);
// }
// .border-extended-secondary-light {
//   border: var(--s-secondary-color-light);
// }

// TODO: (((background basic, border extended): (border-color background-color)): (primary dark:  primary dark, secondary light: secondary light))
// @include variant((((background basic, border extended): (border-color background-color)): (primary dark:  primary dark, secondary light: secondary light)));
// .background-basic-primary-dark {
//   border-color: var(--s-primary-color-dark);
//   background-color: var(--s-primary-color-dark);
// }
// .border-extended-primary-dark {
//   border-color: var(--s-primary-color-dark);
//   background-color: var(--s-primary-color-dark);
// }
// .background-basic-secondary-light {
//   border-color: var(--s-secondary-color-light);
//   background-color: var(--s-secondary-color-light);
// }
// .border-extended-secondary-light {
//   border-color: var(--s-secondary-color-light);
//   background-color: var(--s-secondary-color-light);
// }

// TODO: (((background basic, border extended): (border-color, background-color)): (primary dark:  primary dark, secondary light: secondary light))
// @include variant((((background basic, border extended): (border-color, background-color)): (primary dark:  primary dark, secondary light: secondary light)));
// .background-basic-primary-dark {
//   border-color: var(--s-primary-color-dark);
// }
// .border-extended-primary-dark {
//   background-color: var(--s-primary-color-dark);
// }
// .background-basic-secondary-light {
//   border-color: var(--s-secondary-color-light);
// }
// .border-extended-secondary-light {
//   background-color: var(--s-secondary-color-light);
// }

// multiple properties multiple sides
// TODO: (border: ((inline end color, inline start color): (primary dark:  primary dark, secondary light: secondary light)))
// @include variant((border: ((inline end color, inline start color): (primary dark:  primary dark, secondary light: secondary light))));
// .border-inline-end-color-primary-dark {
//   border-inline-end-color: var(--s-primary-color-dark);
// }
// .border-inline-end-color-secondary-light {
//   border-inline-end-color: var(--s-secondary-color-light);
// }
// .border-inline-start-color-primary-dark {
//   border-inline-start-color: var(--s-primary-color-dark);
// }
// .border-inline-start-color-secondary-light {
//   border-inline-start-color: var(--s-secondary-color-light);
// }

// TODO: (border (basic,): ((inline end, inline start) color: (primary dark:  primary dark, secondary light: secondary light)))
// @include variant((border (basic,): ((inline end, inline start) color: (primary dark:  primary dark, secondary light: secondary light))));
// .border-basic-inline-end-color-primary-dark, .border-basic-inline-start-color-primary-dark {
//   border-inline-end-color: var(--s-primary-color-dark);
//   border-inline-start-color: var(--s-primary-color-dark);
// }
// .border-basic-inline-end-color-secondary-light, .border-basic-inline-start-color-secondary-light {
//   border-inline-end-color: var(--s-secondary-color-light);
//   border-inline-start-color: var(--s-secondary-color-light);
// }

// TODO: (border (basic,): ((inline end color, inline start color): (primary dark:  primary dark, secondary light: secondary light)))
// @include variant((border (basic,): ((inline end color, inline start color): (primary dark:  primary dark, secondary light: secondary light))));
// .border-basic-inline-end-color-primary-dark {
//   border-inline-end-color: var(--s-primary-color-dark);
// }
// .border-basic-inline-end-color-secondary-light {
//   border-inline-end-color: var(--s-secondary-color-light);
// }
// .border-basic-inline-start-color-primary-dark {
//   border-inline-start-color: var(--s-primary-color-dark);
// }
// .border-basic-inline-start-color-secondary-light {
//   border-inline-start-color: var(--s-secondary-color-light);
// }

// TODO: ((border (basic,): border): ((left color, right color): (primary dark:  primary dark, secondary light: secondary light)))
// @include variant(((border (basic,): border): ((left color, right color): (primary dark:  primary dark, secondary light: secondary light))));
// .border-basic-left-color-primary-dark {
//   border-left-color: var(--s-primary-color-dark);
// }
// .border-basic-left-color-secondary-light {
//   border-left-color: var(--s-secondary-color-light);
// }
// .border-basic-right-color-primary-dark {
//   border-right-color: var(--s-primary-color-dark);
// }
// .border-basic-right-color-secondary-light {
//   border-right-color: var(--s-secondary-color-light);
// }


// FEATURE: (class: value) and (property: variant).
// TODO: (color primary dark: primary dark, color secondary dark: secondary dark)
// @include variant((color primary dark: primary dark, color secondary dark: secondary dark));
// TODO: (color: (primary dark: primary dark, secondary dark: secondary dark))
// @include variant((color: (primary dark: primary dark, secondary dark: secondary dark)));
// .color-primary-dark {
//   color: var(--s-primary-color-dark);
// }
// .color-secondary-dark {
//   color: var(--s-secondary-color-dark);
// }

// FEATURE: variant + adjust.
// TODO: (color primary dark: primary dark, color secondary dark: secondary dark)
// @include variant((color primary dark: primary dark, color secondary dark: secondary dark), $hue: 15deg, $saturation: '/' 2, $lightness: '*' 5%, $alpha: 0.5);
// .color-primary-dark {
//   color: hsla(calc(var(--s-primary-color-dark-h) + 15deg), calc(var(--s-primary-color-dark-s) / 2), calc(var(--s-primary-color-dark-l) * 5%), calc(var(--s-primary-color-dark-a) + 0.5));
// }
// .color-secondary-dark {
//   color: hsla(calc(var(--s-secondary-color-dark-h) + 15deg), calc(var(--s-secondary-color-dark-s) / 2), calc(var(--s-secondary-color-dark-l) * 5%), calc(var(--s-secondary-color-dark-a) + 0.5));
// }

// @include variant((color primary dark: (primary dark) 15deg 5% 15% 0.5, color secondary dark: (secondary dark) 10% 0.9));
// .color-primary-dark {
//   color: hsla(calc(var(--s-primary-color-dark-h) + 15deg), calc(var(--s-primary-color-dark-s) + 5%), calc(var(--s-primary-color-dark-l) + 15%), calc(var(--s-primary-color-dark-a) + 0.5));
// }
// .color-secondary-dark {
//   color: hsla(var(--s-secondary-color-dark-h), var(--s-secondary-color-dark-s), calc(var(--s-secondary-color-dark-l) + 10%), calc(var(--s-secondary-color-dark-a) + 0.9));
// }

// FEATURE: variant + adjust + dictionary.
// @include variant((color primary dark: primary dark, color secondary dark: secondary dark), 15deg, '/' 2, '*' 5%, 0.5, false, '&:hover', (primary: p));
// .color-p-dark:hover {
//   color: hsla(calc(var(--s-primary-color-dark-h) + 15deg), calc(var(--s-primary-color-dark-s) / 2), calc(var(--s-primary-color-dark-l) * 5%), calc(var(--s-primary-color-dark-a) + 0.5));
// }
// .color-secondary-dark:hover {
//   color: hsla(calc(var(--s-secondary-color-dark-h) + 15deg), calc(var(--s-secondary-color-dark-s) / 2), calc(var(--s-secondary-color-dark-l) * 5%), calc(var(--s-secondary-color-dark-a) + 0.5));
// }

// FEATURE: variant + important.
// TODO: (color primary dark: primary dark, color secondary dark: secondary dark)
// @include variant((color primary dark: primary dark, color secondary dark: secondary dark), $important: true);
// .color-primary-dark {
//   color: var(--s-primary-color-dark) !important;
// }
// .color-secondary-dark {
//   color: var(--s-secondary-color-dark) !important;
// }

// FEATURE: variant + properties and (property: variant).
// TODO: (color primary dark: primary dark, color secondary dark: secondary dark)
// @include variant((color primary dark: primary dark, color secondary dark: secondary dark), $property: background background-color);
// @include variant((color: (primary dark: primary dark, secondary dark: secondary dark)), $property: background background-color);
// .color-primary-dark {
//   background: var(--s-primary-color-dark);
//   background-color: var(--s-primary-color-dark);
// }
// .color-secondary-dark {
//   background: var(--s-secondary-color-dark);
//   background-color: var(--s-secondary-color-dark);
// }

// TODO: (border-color background-color: (primary dark: primary dark, secondary dark: secondary dark))
// @include variant((border-color background-color: (primary dark: primary dark, secondary dark: secondary dark)));
// .background-background-color-primary-dark {
//   border-color: var(--s-primary-color-dark);
//   background-color: var(--s-primary-color-dark);
// }
// .background-background-color-secondary-dark {
//   border-color: var(--s-secondary-color-dark);
//   background-color: var(--s-secondary-color-dark);
// }

// TODO: (bg primary dark: primary dark, bg secondary dark: secondary dark)
// @include variant((bg primary dark: primary dark, bg secondary dark: secondary dark), $property: background);
// .bg-primary-dark {
//   background: var(--s-primary-color-dark);
// }
// .bg-secondary-dark {
//   background: var(--s-secondary-color-dark);
// }

// TODO: (bg primary dark: primary dark, bg secondary dark: secondary dark)
// @include variant((bg primary dark: primary dark, bg secondary dark: secondary dark), $property: (background, color));
// .bg-primary-dark {
//   background: var(--s-primary-color-dark);
//   color: var(--s-primary-color-dark);
// }
// .bg-secondary-dark {
//   background: var(--s-secondary-color-dark);
//   color: var(--s-secondary-color-dark);
// }

// TODO: (background: (primary dark: primary dark, secondary dark: secondary dark))
// @include variant((background: (primary dark: primary dark, secondary dark: secondary dark)));
// .background-primary-dark {
//   background: var(--s-primary-color-dark);
// }
// .background-secondary-dark {
//   background: var(--s-secondary-color-dark);
// }

// FEATURE: (property: variant)
// TODO: (background color: ( primary dark: primary dark, secondary dark: secondary dark))
// @include variant((background color: ( primary dark: primary dark, secondary dark: secondary dark)));
// .background-color-primary-dark {
//   background: var(--s-primary-color-dark);
//   color: var(--s-primary-color-dark);
// }
// .background-color-secondary-dark {
//   background: var(--s-secondary-color-dark);
//   color: var(--s-secondary-color-dark);
// }

// FEATURE: (property (class,): variant)
// TODO: (background (basic,): (primary dark: primary dark, secondary dark: secondary dark))
// @include variant((background (basic,): (primary dark: primary dark, secondary dark: secondary dark)));
// .background-basic-primary-dark {
//   background: var(--s-primary-color-dark);
// }
// .background-basic-secondary-dark {
//   background: var(--s-secondary-color-dark);
// }

// FEATURE: ((property, property): variant)
// TODO: ((background, color): ( primary dark: primary dark, secondary dark: secondary dark))
// @include variant(((background, color): ( primary dark: primary dark, secondary dark: secondary dark)));
// .background-primary-dark {
//   background: var(--s-primary-color-dark);
// }
// .color-primary-dark {
//   color: var(--s-primary-color-dark);
// }
// .background-secondary-dark {
//   background: var(--s-secondary-color-dark);
// }
// .color-secondary-dark {
//   color: var(--s-secondary-color-dark);
// }

// FEATURE: (property/class: ((+property/class, +property/class): variant))
// TODO: ((background color): ((dark, light): ( primary dark: primary dark, secondary dark: secondary dark)))
// @include variant(((background color): ((dark, light): ( primary dark: primary dark, secondary dark: secondary dark))), $pseudo-class: '&:hover');
// .background-color-dark-primary-dark:hover {
//   background-dark: var(--s-primary-color-dark);
//   color-dark: var(--s-primary-color-dark);
// }
// .background-color-dark-secondary-dark:hover {
//   background-dark: var(--s-secondary-color-dark);
//   color-dark: var(--s-secondary-color-dark);
// }
// .background-color-light-primary-dark:hover {
//   background-light: var(--s-primary-color-dark);
//   color-light: var(--s-primary-color-dark);
// }
// .background-color-light-secondary-dark:hover {
//   background-light: var(--s-secondary-color-dark);
//   color-light: var(--s-secondary-color-dark);
// }

// FEATURE: ((property/class, property/class): ((+property/class, +property/class): variant))).
// TODO: ((background, color): ((dark, light): ( primary dark: primary dark, secondary dark: secondary dark)))
// @include variant(((background, color): ((dark, light): ( primary dark: primary dark, secondary dark: secondary dark))), $pseudo-class: '&:hover');
// .background-dark-primary-dark:hover {
//   background-dark: var(--s-primary-color-dark);
// }
// .background-dark-secondary-dark:hover {
//   background-dark: var(--s-secondary-color-dark);
// }
// .background-light-primary-dark:hover {
//   background-light: var(--s-primary-color-dark);
// }
// .background-light-secondary-dark:hover {
//   background-light: var(--s-secondary-color-dark);
// }
// .color-dark-primary-dark:hover {
//   color-dark: var(--s-primary-color-dark);
// }
// .color-dark-secondary-dark:hover {
//   color-dark: var(--s-secondary-color-dark);
// }
// .color-light-primary-dark:hover {
//   color-light: var(--s-primary-color-dark);
// }
// .color-light-secondary-dark:hover {
//   color-light: var(--s-secondary-color-dark);
// }



// dictionary
// TODO: ((background: (primary dark: primary dark, secondary dark: secondary dark)))
// @include variant(((background: (primary dark: primary dark, secondary dark: secondary dark))), $dictionary: (background: bg));
// .bg-primary-dark {
//   background: var(--s-primary-color-dark);
// }
// .bg-secondary-dark {
//   background: var(--s-secondary-color-dark);
// }

// FEATURE: (property/class: ((+property/class, +property/class): variant))).
// @include variant((border: (
//   (block start color, block end color): (
//     primary: primary color,
//     primary dark: primary color dark,
//     primary light: primary color light,
//   ),
// )));
// .border-block-start-color-primary {
//   border-block-start-color: var(--s-primary-color);
// }
// .border-block-start-color-primary-dark {
//   border-block-start-color: var(--s-primary-color-dark);
// }
// .border-block-start-color-primary-light {
//   border-block-start-color: var(--s-primary-color-light);
// }
// .border-block-end-color-primary {
//   border-block-end-color: var(--s-primary-color);
// }
// .border-block-end-color-primary-dark {
//   border-block-end-color: var(--s-primary-color-dark);
// }
// .border-block-end-color-primary-light {
//   border-block-end-color: var(--s-primary-color-light);
// }

// FEATURE: (class: (+class: (class: (property: value)))).
// @include variant((border: (
//   (block start end color): (
//     primary: (
//       (border-color, color): primary,
//     ),
//     primary dark: (
//       (border-color, color): primary dark,
//     ),
//     primary light: (
//       (border-color, color): primary light,
//     ),
//   ),
// )));
// .border-block-start-end-color-primary {
//   border-color: var(--s-primary-color);
//   color: var(--s-primary-color);
// }
// .border-block-start-end-color-primary-dark {
//   border-color: var(--s-primary-color-dark);
//   color: var(--s-primary-color-dark);
// }
// .border-block-start-end-color-primary-light {
//   border-color: var(--s-primary-color-light);
//   color: var(--s-primary-color-light);
// }

// FEATURE: (class: ((+class, +class) +class: (class: (property: value)))).
// @include variant((border: (
//   (left, right) color: (
//     primary: (
//       (border-left-color, border-right-color): primary,
//     ),
//     primary dark: (
//       (border-left-color, border-right-color): primary dark,
//     ),
//     primary light: (
//       (border-left-color, border-right-color): primary light,
//     ),
//   ),
// )));
// .border-left-color-primary, .border-right-color-primary {
//   border-left-color: var(--s-primary-color);
//   border-right-color: var(--s-primary-color);
// }
// .border-left-color-primary-dark, .border-right-color-primary-dark {
//   border-left-color: var(--s-primary-color-dark);
//   border-right-color: var(--s-primary-color-dark);
// }
// .border-left-color-primary-light, .border-right-color-primary-light {
//   border-left-color: var(--s-primary-color-light);
//   border-right-color: var(--s-primary-color-light);
// }

// FEATURE: (property/class: ((+property/class, +property/class): (class: value)))).
// @include variant((border: ((left-color, right-color): ( primary dark: primary dark, secondary dark: secondary dark))));
// .border-left-color-primary-dark {
//   border-left-color: var(--s-primary-color-dark);
// }
// .border-left-color-secondary-dark {
//   border-left-color: var(--s-secondary-color-dark);
// }
// .border-right-color-primary-dark {
//   border-right-color: var(--s-primary-color-dark);
// }
// .border-right-color-secondary-dark {
//   border-right-color: var(--s-secondary-color-dark);
// }

// @include variant((( border background ): ((left-color, right-color ): ( primary dark: primary dark, secondary dark: secondary dark))));
// .border-background-left-color-primary-dark {
//   border-left-color: var(--s-primary-color-dark);
//   background-left-color: var(--s-primary-color-dark);
// }
// .border-background-left-color-secondary-dark {
//   border-left-color: var(--s-secondary-color-dark);
//   background-left-color: var(--s-secondary-color-dark);
// }
// .border-background-right-color-primary-dark {
//   border-right-color: var(--s-primary-color-dark);
//   background-right-color: var(--s-primary-color-dark);
// }
// .border-background-right-color-secondary-dark {
//   border-right-color: var(--s-secondary-color-dark);
//   background-right-color: var(--s-secondary-color-dark);
// }

// @include variant(((border, background): ((left-color, right-color): ( primary dark: primary dark, secondary dark: secondary dark))));
// .border-left-color-primary-dark {
//   border-left-color: var(--s-primary-color-dark);
// }
// .border-left-color-secondary-dark {
//   border-left-color: var(--s-secondary-color-dark);
// }
// .border-right-color-primary-dark {
//   border-right-color: var(--s-primary-color-dark);
// }
// .border-right-color-secondary-dark {
//   border-right-color: var(--s-secondary-color-dark);
// }
// .background-left-color-primary-dark {
//   background-left-color: var(--s-primary-color-dark);
// }
// .background-left-color-secondary-dark {
//   background-left-color: var(--s-secondary-color-dark);
// }
// .background-right-color-primary-dark {
//   background-right-color: var(--s-primary-color-dark);
// }
// .background-right-color-secondary-dark {
//   background-right-color: var(--s-secondary-color-dark);
// }

// @include variant(((variant (basic,): (property1, property2)): ((top left color, bottom right color): (value class one: value one, value class two: value two))));
// .variant-basic-top-left-color-value-class-one {
//   property1-top-left-color: var(--s-value-one-color);
// }
// .variant-basic-top-left-color-value-class-two {
//   property2-top-left-color: var(--s-value-two-color);
// }
// .variant-basic-bottom-right-color-value-class-one {
//   property1-bottom-right-color: var(--s-value-one-color);
// }
// .variant-basic-bottom-right-color-value-class-two {
//   property2-bottom-right-color: var(--s-value-two-color);
// }

// @include variant(((variant (basic,): (property1, property2)): (((top left, bottom right): color): (value class one: value one, value class two: value two))));
// .variant-basic-top-left-color-value-class-one {
//   property1-top-left-color: var(--s-value-one-color);
// }
// .variant-basic-top-left-color-value-class-two {
//   property2-top-left-color: var(--s-value-two-color);
// }
// .variant-basic-bottom-right-color-value-class-one {
//   property1-bottom-right-color: var(--s-value-one-color);
// }
// .variant-basic-bottom-right-color-value-class-two {
//   property2-bottom-right-color: var(--s-value-two-color);
// }

// REVIEW:
// @include variant(((border (basic, outline), (test 1, test 2) padding margin): ((top left, bottom right): (primary dark: primary dark, secondary dark: secondary dark))));
// @include variant(((border (basic more,)): ((top left, bottom right): (primary dark: primary dark, secondary dark: secondary dark))));
// @include variant(((border (basic more,), margin (basic)): ((top left, bottom right): (primary dark: primary dark, secondary dark: secondary dark))));
// @include variant(((border, margin) (basic more,): ((top left, bottom right): (primary dark: primary dark, secondary dark: secondary dark))));
// @include variant(((border (basic, outline), padding margin): ((top left, bottom right): (primary dark: primary dark, secondary dark: secondary dark))));
// @include variant((border (top, bottom) color: (primary dark: primary dark, secondary dark: secondary dark)));
// @include variant((border (left, top) color: (primary dark: primary dark, secondary dark: secondary dark)));
// @include variant((border block (start, end) color: (primary dark: primary dark, secondary dark: secondary dark)));
// @include variant((test (padding, margin) top: (primary dark: primary dark, secondary dark: secondary dark)));
// @include variant((test: ((padding, margin): (primary dark: primary dark, secondary dark: secondary dark))));
// @include variant(((): ((): (primary dark: primary dark, secondary dark: secondary dark))), $property: color);
// @include variant(((border basic, margin basic): ((left color, top color): (primary dark: primary dark, secondary dark: secondary dark))));
// @include variant(((border, margin): ((left, top) color: (primary dark: primary dark, secondary dark: secondary dark))));
// @include variant(((padding margin): ((left top, right bottom): (primary dark: primary dark, secondary dark: secondary dark))));
// @include variant(((border basic large: (border, margin)): ((left color, top color): (primary dark: primary dark, secondary dark: secondary dark))));
// @include variant((((border, margin) basic): ((left color, top color): (primary dark: primary dark, secondary dark: secondary dark))));

// Structure.
// (class: value)
// (property: (class: value))
// (property: (attribute: (class: value)))
// ((property1, property2): ())

// @include variant(((name one, name two) property (name one, name two): ((xl, xs) class one: value one, class two (xl, xs): value two)));
// @include variant((((class1, class2): property): (((top, right): color): ((xl, xs): value one))));

// variant: ((class,): value, (class) class: value)
// @include variant(((class1, class2): value1, (class3, class4) class: value2));
// .class1 {
//   color: var(--s-value1-color);
// }
// .class2 {
//   color: var(--s-value1-color);
// }
// .class3-class, .class4-class {
//   color: var(--s-value2-color);
// }

// variant: (property: (class: value), (class) class: value)
// @include variant((property: (class: value), (class3, class4) class: value2));
// .property-class {
//   property: var(--s-value-color);
// }
// .class3-class, .class4-class {
//   color: var(--s-value2-color);
// }

// @include variant(((property1, property2): (class: value)));
// .property1-class {
//   property1: var(--s-value-color);
// }
// .property2-class {
//   property2: var(--s-value-color);
// }

// @include variant(((property1, property2): ((class1, class2): value)));
// .property1-class1 {
//   property1: var(--s-value-color);
// }
// .property1-class2 {
//   property1: var(--s-value-color);
// }
// .property2-class1 {
//   property2: var(--s-value-color);
// }
// .property2-class2 {
//   property2: var(--s-value-color);
// }
