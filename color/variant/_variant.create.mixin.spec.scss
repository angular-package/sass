// BUG:
// DEBUG:
// FEATURE:
// FIX:
// FIXME:
// HACK:
// IDEA:
// INFO:
// OPTIMIZE:
// REVIEW:
// SECTION:
// TODO(Name): asdasdasd
// TSC:
// UGLY:

// Mixins.
@use 'variant.create.mixin' as *;

// ((border, outline): (primary: primary dark)), $property: (attribute: color)

// @include create(
//   ((border, outline): ((top, bottom): (primary: primary dark, secondary: secondary light))),
//   // ((border, outline): ((top, bottom): (primary: primary dark))),
//   // ((basic: (border, outline)): ((top, bottom): (primary: primary dark))),
//   false false false,
//   null,
//   null,
//   null,
//   null,
//   false,
//   (),
//   (),
//   null,
// ) using($resolved) {
//   // @debug $resolved;
// }

// @include create((core: (primary lighten: () (color: (primary lighten color, 15%)) (background: (darken color, 3%)) ,)));


// FEATURE: Modifier.
// @include create((border: (top: (primary: primary dark))), $modifier: (property: (base: outline)));
// @include create(((basic (border, outline)): ((top, bottom): (primary: primary dark))));
// @include create(((basic: (border, outline) top): ((top, bottom): (primary: (primary dark), secondary: secondary light))));
// @include create((border: (top: (primary: primary dark))));
// @include create((border: ((top, bottom): (primary: primary dark))));
// @include create(((basic: (border, outline) start): ((start, end): (primary: primary dark))));
// @include create(
//   ((basic: (border top, outline)): (color: (primary dark: ((background, border top): primary dark, outline: (secondary dark: hsla)), secondary: (secondary light: hsla, third: hsla)))),
//   $property: (middle: aaa)
// );

// TODO: hsla
// @include create((border color: primary ':hsla'));
// @include create((primary: primary, secondary: secondary));




// Examples.

// SECTION: Variant 1.

// FEATURE: Variant.
// @include create((color: primary dark));
// .color {
//   color: var(--primarycolordark);
// }

// @include create((background color: primary dark));
// .background-color {
//   background-color: var(--primarycolordark);
// }

// FEATURE: Multiple variants.
// @include create((border: primary, background: secondary));
// .border {
//   border: var(--primarycolor);
// }
// .background {
//   background: var(--secondarycolor);
// }

// @include create((border top: primary, background color: secondary));
// .border-top {
//   border-top: var(--primarycolor);
// }
// .background-color {
//   background-color: var(--secondarycolor);
// }

// TODO: Check multiple properties.
// @include create(((border color: border color): primary, background color: secondary));

// @include create((border color: primary, background color: secondary));
// .border-color {
//   border: var(--primarycolor);
//   color: var(--primarycolor);
// }
// .background-color {
//   background: var(--secondarycolor);
//   color: var(--secondarycolor);
// }

// @include create((border color: primary dark, background color: secondary dark));
// .border-color {
//   border: var(--primarycolordark);
//   color: var(--primarycolordark);
// }
// .background-color {
//   background: var(--secondarycolordark);
//   color: var(--secondarycolordark);
// }

// FEATURE: Multiple properties and variants, same value.
// @include create(((background, color): primary dark));
// .background {
//   background: var(--primarycolordark);
// }
// .color {
//   color: var(--primarycolordark);
// }

// @include create(((background color, border color): primary dark));
// .background-color {
//   background-color: var(--primarycolordark);
// }
// .border-color {
//   border-color: var(--primarycolordark);
// }

// FEATURE: Variant class different than property.
// @include create(((color: background): primary dark));
// .color {
//   background: var(--primarycolordark);
// }

// FEATURE: Variant class different than properties.
// @include create(((border: (border, outline) (top, bottom)): primary dark));
// .border {
//   border-top: var(--primarycolordark);
//   border-bottom: var(--primarycolordark);
//   outline-top: var(--primarycolordark);
//   outline-bottom: var(--primarycolordark);
// }

// FEATURE: Multiple properties different value.
// @include create((border: (color: primary dark, radius: third) ()));
// .border {
//   border-color: var(--primarycolordark);
//   border-radius: var(--thirdcolor);
// }

// @new FEATURE:
// @include create(((basic colors: ()): (color: primary dark, background: secondary light) ()));
// .basic-colors {
//   color: var(--primarycolordark);
//   background: var(--secondarycolorlight);
// }

// @include create(((basic colors: border): (left color: primary dark, right color: secondary) ()));
// .basic-colors {
//   border-left-color: var(--primarycolordark);
//   border-right-color: var(--secondarycolor);
// }

// @include create((((basic colors, extended colors): (border, outline)): (left color: primary dark, top radius: secondary) ()));
// .basic-colors {
//   border-left-color: var(--primarycolordark);
//   outline-left-color: var(--primarycolordark);
//   border-top-radius: var(--secondarycolor);
//   outline-top-radius: var(--secondarycolor);
// }
// .extended-colors {
//   border-left-color: var(--primarycolordark);
//   outline-left-color: var(--primarycolordark);
//   border-top-radius: var(--secondarycolor);
//   outline-top-radius: var(--secondarycolor);
// }

// FEATURE: Common classes.
// @include create((((basic, extended) colors: (border, outline)): (left color: primary dark, top radius: secondary) ()));
// .basic-colors, .extended-colors {
//   border-left-color: var(--primarycolordark);
//   outline-left-color: var(--primarycolordark);
//   border-top-radius: var(--secondarycolor);
//   outline-top-radius: var(--secondarycolor);
// }

// @include create(((border, outline) color: primary));
// .border-color, .outline-color {
//   border-color: var(--primarycolor);
//   outline-color: var(--primarycolor);
// }

// @include create((((border, outline) color: color): primary));
// .border-color, .outline-color {
//   color: var(--primarycolor);
// }



// FEATURE: Property or class modifier.
// @include create((primary dark:  primary dark, secondary light: secondary light), $property: border-color);
// .primary-dark {
//   border-color: var(--primarycolordark);
// }
// .secondary-light {
//   border-color: var(--secondarycolorlight);
// }

// TODO: (primary light: primary light, secondary dark: secondary dark)
// @include create((primary light: primary light, secondary dark: secondary dark), $property: (name: property, suffix: color));
// .primary-light {
//   property-color: var(--primarycolorlight);
// }
// .secondary-dark {
//   property-color: var(--secondarycolordark);
// }

// SECTION: Variant 2.

// FEATURE: Property in variant.
// @include create((color: (primary dark: primary dark)));
// .color-primary-dark {
//   color: var(--primarycolordark);
// }

// FEATURE: Multiple properties with variant. // REVIEW: Check.
// @include create(((color, background): (primary dark: primary dark)));
// .color-primary-dark {
//   color: var(--primarycolordark);
// }
// .background-primary-dark {
//   background: var(--primarycolordark);
// }

// FEATURE: Multiple properties with variants.
// @include create(((background, color): (primary dark: primary dark, secondary: secondary light)));
// .background-primary-dark {
//   background: var(--primarycolordark);
// }
// .background-secondary {
//   background: var(--secondarycolorlight);
// }
// .color-primary-dark {
//   color: var(--primarycolordark);
// }
// .color-secondary {
//   color: var(--secondarycolorlight);
// }

// FEATURE: Two properties in variant, same value.
// @include create(((background: (background, color)): primary dark));
// .background {
//   background: var(--primarycolordark);
//   color: var(--primarycolordark);
// }

// FEATURE: Two properties in two variants, same value.
// @include create(((background: (background, color)): (primary dark: primary dark, secondary: secondary light)));
// .background-primary-dark {
//   background: var(--primarycolordark);
//   color: var(--primarycolordark);
// }
// .background-secondary {
//   background: var(--secondarycolorlight);
//   color: var(--secondarycolorlight);
// }

// FEATURE: Multiple properties different value.
// @include create((border: (top: (color: primary dark, radius: third) ())));
// @include create((border: (top: (left: (color: primary dark, radius: third) ()))));
// @include create((border: (top: (left: (test: (color: primary dark, radius: third) ())))));


// TODO: Check.
// different property
// @include create((border-color: (primary dark: primary dark, secondary light: secondary light)));
// .border-color-primary-dark {
//   border-color: var(--primarycolordark);
// }
// .border-color-secondary-light {
//   border-color: var(--secondarycolorlight);
// }



// TODO: (border-color background-color: (primary dark: primary dark, secondary dark: secondary dark))
// @include create((border-color background-color: (primary dark: primary dark, secondary dark: secondary dark)));
// .background-background-color-primary-dark {
//   border-color: var(--s-primary-color-dark);
//   background-color: var(--s-primary-color-dark);
// }
// .background-background-color-secondary-dark {
//   border-color: var(--s-secondary-color-dark);
//   background-color: var(--s-secondary-color-dark);
// }



// dictionary
// TODO: ((background: (primary dark: primary dark, secondary dark: secondary dark)))
// @include create(((background: (primary dark: primary dark, secondary dark: secondary dark))), $dictionary: (background: bg));
// .bg-primary-dark {
//   background: var(--s-primary-color-dark);
// }
// .bg-secondary-dark {
//   background: var(--s-secondary-color-dark);
// }


// multiple properties in one
// TODO: (border-color background: (primary dark:  primary dark, secondary light: secondary light))
// @include create(((border background: (border, background)): (primary dark:  primary dark, secondary light: secondary light)));
// .border-color-background-primary-dark {
//   border-color: var(--primarycolordark);
//   background: var(--primarycolordark);
// }
// .border-color-background-secondary-light {
//   border-color: var(--secondarycolorlight);
//   background: var(--secondarycolorlight);
// }


// TODO: (border background (color,): (primary dark:  primary dark, secondary light: secondary light))
// @include create(((border background: (border, background)): (primary dark:  primary dark, secondary light: secondary light)));
// .border-background-color-primary-dark {
//   border: var(--primarycolordark);
//   background: var(--primarycolordark);
// }
// .border-background-color-secondary-light {
//   border: var(--secondarycolorlight);
//   background: var(--secondarycolorlight);
// }


// TODO: (border background (color,): (primary dark:  primary dark, secondary light: secondary light))
// @include create(((border background: (border, background)): (primary dark:  primary dark, secondary light: secondary light)));
// .border-background-color-primary-dark {
//   border-color: var(--s-primary-color-dark);
//   background-color: var(--s-primary-color-dark);
// }
// .border-background-color-secondary-light {
//   border-color: var(--s-secondary-color-light);
//   background-color: var(--s-secondary-color-light);
// }

// TODO: (border background (xs, xl): (dark primary: primary dark, secondary: secondary light))
// @include create(((border background (xs, xl): (border, background)): (dark primary: primary dark, secondary: secondary light)));
// .border-background-xs-dark-primary, .border-background-xl-dark-primary {
//   border: var(--s-primary-color-dark);
//   background: var(--s-primary-color-dark);
// }
// .border-background-xs-secondary, .border-background-xl-secondary {
//   border: var(--s-secondary-color-light);
//   background: var(--s-secondary-color-light);
// }

// TODO: ((basic,) border background: (primary dark:  primary dark, secondary light: secondary light))
// @include create(((basic border background: (border, background)): (primary dark:  primary dark, secondary light: secondary light)));
// .basic-border-background-primary-dark {
//   border: var(--s-primary-color-dark);
//   background: var(--s-primary-color-dark);
// }
// .basic-border-background-secondary-light {
//   border: var(--s-secondary-color-light);
//   background: var(--s-secondary-color-light);
// }


// multiple properties each separately
// TODO: ((border background, outline caret): (primary dark:  primary dark, secondary light: secondary light))
// @include create(((border background, outline caret): (primary dark:  primary dark, secondary light: secondary light)));
// .border-background-primary-dark {
//   border: var(--s-primary-color-dark);
//   background: var(--s-primary-color-dark);
// }
// .outline-caret-primary-dark {
//   outline: var(--s-primary-color-dark);
//   caret: var(--s-primary-color-dark);
// }
// .border-background-secondary-light {
//   border: var(--s-secondary-color-light);
//   background: var(--s-secondary-color-light);
// }
// .outline-caret-secondary-light {
//   outline: var(--s-secondary-color-light);
//   caret: var(--s-secondary-color-light);
// }


// class name separately from properties
// TODO: (border basic: border): (primary dark:  primary dark, secondary light: secondary light))
// @include create(((border basic: border): (primary dark:  primary dark, secondary light: secondary light)));
// .border-basic-primary-dark {
//   border: var(--s-primary-color-dark);
// }
// .border-basic-secondary-light {
//   border: var(--s-secondary-color-light);
// }

// TODO: (((border basic, border extended): border): (primary dark:  primary dark, secondary light: secondary light))
// @include create((((border basic, border extended): border): (primary dark:  primary dark, secondary light: secondary light)));
// @include create((
//   (border basic: border): (primary dark:  primary dark, secondary light: secondary light),
//   (border extended: border): (primary dark:  primary dark, secondary light: secondary light)
// ));
// .border-basic-primary-dark {
//   border: var(--s-primary-color-dark);
// }
// .border-basic-secondary-light {
//   border: var(--s-secondary-color-light);
// }
// .border-extended-primary-dark {
//   border: var(--s-primary-color-dark);
// }
// .border-extended-secondary-light {
//   border: var(--s-secondary-color-light);
// }


// TODO: (background: (primary dark: primary dark, secondary dark: secondary dark))
// @include create((background: (primary dark: primary dark, secondary dark: secondary dark)));
// .background-primary-dark {
//   background: var(--s-primary-color-dark);
// }
// .background-secondary-dark {
//   background: var(--s-secondary-color-dark);
// }

// FEATURE: (property: variant)
// TODO: (background color: ( primary dark: primary dark, secondary dark: secondary dark))
// @include create((background color: ( primary dark: primary dark, secondary dark: secondary dark)));
// .background-color-primary-dark {
//   background: var(--s-primary-color-dark);
//   color: var(--s-primary-color-dark);
// }
// .background-color-secondary-dark {
//   background: var(--s-secondary-color-dark);
//   color: var(--s-secondary-color-dark);
// }

// FEATURE: (property (class,): variant)
// TODO: (background (basic,): (primary dark: primary dark, secondary dark: secondary dark))
// @include create((background (basic,): (primary dark: primary dark, secondary dark: secondary dark)));
// .background-basic-primary-dark {
//   background: var(--s-primary-color-dark);
// }
// .background-basic-secondary-dark {
//   background: var(--s-secondary-color-dark);
// }

// FEATURE: ((property, property): variant)
// TODO: ((background, color): ( primary dark: primary dark, secondary dark: secondary dark))
// @include create(((background, color): ( primary dark: primary dark, secondary dark: secondary dark)));
// .background-primary-dark {
//   background: var(--s-primary-color-dark);
// }
// .color-primary-dark {
//   color: var(--s-primary-color-dark);
// }
// .background-secondary-dark {
//   background: var(--s-secondary-color-dark);
// }
// .color-secondary-dark {
//   color: var(--s-secondary-color-dark);
// }


// TODO: (border: (primary dark:  primary dark, secondary light: secondary light))
// @include create((border: (primary dark:  primary dark, secondary light: secondary light)), $property: (suffix: color));
// .border-primary-dark {
//   border-color: var(--primarycolordark);
// }
// .border-secondary-light {
//   border-color: var(--secondarycolorlight);
// }


// multiple properties separately
// TODO: ((border, background): (primary dark:  primary dark, secondary light: secondary light))
// @include create(((border, background): (primary dark:  primary dark, secondary light: secondary light)));
// TODO: (border: (primary dark:  primary dark, secondary light: secondary light), background: (primary dark:  primary dark, secondary light: secondary light))
// @include create((border: (primary dark:  primary dark, secondary light: secondary light), background: (primary dark:  primary dark, secondary light: secondary light)));
// .border-primary-dark {
//   border: var(--s-primary-color-dark);
// }
// .border-secondary-light {
//   border: var(--s-secondary-color-light);
// }
// .background-primary-dark {
//   background: var(--s-primary-color-dark);
// }
// .background-secondary-light {
//   background: var(--s-secondary-color-light);
// }


// TODO: (((basic,) border background, outline caret (color,)): (primary dark:  primary dark, secondary light: secondary light)), $property: (suffix: color)
// @include create((((basic border background: (outline, caret))): (primary dark:  primary dark, secondary light: secondary light)));
// .basic-border-background-primary-dark {
//   border-color: var(--s-primary-color-dark);
//   background-color: var(--s-primary-color-dark);
// }
// .outline-caret-color-primary-dark {
//   outline-color: var(--s-primary-color-dark);
//   caret-color: var(--s-primary-color-dark);
// }
// .basic-border-background-secondary-light {
//   border-color: var(--s-secondary-color-light);
//   background-color: var(--s-secondary-color-light);
// }
// .outline-caret-color-secondary-light {
//   outline-color: var(--s-secondary-color-light);
//   caret-color: var(--s-secondary-color-light);
// }

// SECTION: Variant 3.

// FEATURE:
// @include create((border: ((): (primary dark: primary dark, secondary: secondary light))));
// .border-primary-dark {
//   border: var(--primarycolordark);
// }
// .border-secondary {
//   border: var(--secondarycolorlight);
// }

// FEATURE:
// @include create(((border outline: (border, outline)): ((): (primary dark: primary dark, secondary: secondary light))));
// .border-outline-primary-dark {
//   border: var(--primarycolordark);
//   outline: var(--primarycolordark);
// }
// .border-outline-secondary {
//   border: var(--secondarycolorlight);
//   outline: var(--secondarycolorlight);
// }

// @include create(((border, outline): ((): (primary dark: primary dark, secondary: secondary light))));
// .border-primary-dark {
//   border: var(--primarycolordark);
// }
// .border-secondary {
//   border: var(--secondarycolorlight);
// }
// .outline-primary-dark {
//   outline: var(--primarycolordark);
// }
// .outline-secondary {
//   outline: var(--secondarycolorlight);
// }


// TODO:
// @include create((((border outline, color): (border, outline)): ((): (primary dark: primary dark, secondary: secondary light))));
// .border-outline-primary-dark {
//   border: var(--primarycolordark);
//   outline: var(--primarycolordark);
// }
// .border-outline-secondary {
//   border: var(--secondarycolorlight);
//   outline: var(--secondarycolorlight);
// }
// .color-primary-dark {
//   color: var(--primarycolordark);
// }
// .color-secondary {
//   color: var(--secondarycolorlight);
// }

// @include create((border: (color: (primary dark: primary dark, secondary: secondary light))));
// .border-color-primary-dark {
//   border-color: var(--primarycolordark);
// }
// .border-color-secondary {
//   border-color: var(--secondarycolorlight);
// }

// @include create(((basic: border): (((): color): (primary dark: primary dark, secondary: secondary light))));
// .basic-primary-dark {
//   border-color: var(--primarycolordark);
// }
// .basic-secondary {
//   border-color: var(--secondarycolorlight);
// }

// @include create(((basic: border): (color: (primary dark: primary dark, secondary: secondary light))));
// .basic-color-primary-dark {
//   border-color: var(--primarycolordark);
// }
// .basic-color-secondary {
//   border-color: var(--secondarycolorlight);
// }

// @include create(((basic: border): (top: (color: (primary dark: primary dark, secondary: secondary light)))));
// .basic-top-color-primary-dark {
//   border-top-color: var(--primarycolordark);
// }
// .basic-top-color-secondary {
//   border-top-color: var(--secondarycolorlight);
// }

// @include create(((basic: border): ((bottom, top): (color: (primary dark: primary dark, secondary: secondary light)))));
// .basic-bottom-color-primary-dark {
//   border-bottom-color: var(--primarycolordark);
// }
// .basic-bottom-color-secondary {
//   border-bottom-color: var(--secondarycolorlight);
// }
// .basic-top-color-primary-dark {
//   border-top-color: var(--primarycolordark);
// }
// .basic-top-color-secondary {
//   border-top-color: var(--secondarycolorlight);
// }

// @include create(((border basic: border): (((bottom, top, right, left)): (color: (primary dark: primary dark, secondary: secondary light)))));
// .border-basic-bottom-color-primary-dark {
//   border-bottom-color: var(--primarycolordark);
// }
// .border-basic-bottom-color-secondary {
//   border-bottom-color: var(--secondarycolorlight);
// }
// .border-basic-top-color-primary-dark {
//   border-top-color: var(--primarycolordark);
// }
// .border-basic-top-color-secondary {
//   border-top-color: var(--secondarycolorlight);
// }
// .border-basic-right-color-primary-dark {
//   border-right-color: var(--primarycolordark);
// }
// .border-basic-right-color-secondary {
//   border-right-color: var(--secondarycolorlight);
// }
// .border-basic-left-color-primary-dark {
//   border-left-color: var(--primarycolordark);
// }
// .border-basic-left-color-secondary {
//   border-left-color: var(--secondarycolorlight);
// }

// @include create(((basic: (border, outline)): (color: (primary dark: primary dark, secondary: secondary light))));
// .basic-color-primary-dark {
//   border-color: var(--primarycolordark);
//   outline-color: var(--primarycolordark);
// }
// .basic-color-secondary {
//   border-color: var(--secondarycolorlight);
//   outline-color: var(--secondarycolorlight);
// }

// @include create(((border, outline): (color: (primary dark: primary dark, secondary: secondary light))));
// .border-color-primary-dark {
//   border-color: var(--primarycolordark);
// }
// .border-color-secondary {
//   border-color: var(--secondarycolorlight);
// }
// .outline-color-primary-dark {
//   outline-color: var(--primarycolordark);
// }
// .outline-color-secondary {
//   outline-color: var(--secondarycolorlight);
// }

// @include create(((border, outline): ((top, bottom): (primary dark: primary dark))));
// .border-top-primary-dark {
//   border-top: var(--primarycolordark);
// }
// .border-bottom-primary-dark {
//   border-bottom: var(--primarycolordark);
// }
// .outline-top-primary-dark {
//   outline-top: var(--primarycolordark);
// }
// .outline-bottom-primary-dark {
//   outline-bottom: var(--primarycolordark);
// }

// @include create(((basic: (border, outline)): (((bottom, top, right, left)): (color: (primary dark: primary dark, secondary: secondary light)))));
// .basic-bottom-color-primary-dark {
//   border-bottom-color: var(--primarycolordark);
//   outline-bottom-color: var(--primarycolordark);
// }
// .basic-bottom-color-secondary {
//   border-bottom-color: var(--secondarycolorlight);
//   outline-bottom-color: var(--secondarycolorlight);
// }
// .basic-top-color-primary-dark {
//   border-top-color: var(--primarycolordark);
//   outline-top-color: var(--primarycolordark);
// }
// .basic-top-color-secondary {
//   border-top-color: var(--secondarycolorlight);
//   outline-top-color: var(--secondarycolorlight);
// }
// .basic-right-color-primary-dark {
//   border-right-color: var(--primarycolordark);
//   outline-right-color: var(--primarycolordark);
// }
// .basic-right-color-secondary {
//   border-right-color: var(--secondarycolorlight);
//   outline-right-color: var(--secondarycolorlight);
// }
// .basic-left-color-primary-dark {
//   border-left-color: var(--primarycolordark);
//   outline-left-color: var(--primarycolordark);
// }
// .basic-left-color-secondary {
//   border-left-color: var(--secondarycolorlight);
//   outline-left-color: var(--secondarycolorlight);
// }


// ------------------------------------
// Here


// TODO: Check.
// @include create(((basic: (background, border, outline)): ((top, bottom): (primary dark: ((background, border) color: primary dark, outline color: accent), secondary: secondary light))));

// @include create(((basic: (background border, outline)): (((top, bottom): ()): (color: (primary dark: primary dark))))); // REVIEW: Check

// @include create(((basic: (background, border, outline)): (((top, bottom): ()): (color: (primary dark: primary dark))))); // DONE
// .basic-top-color-primary-dark {
//   background-color: var(--primarycolordark);
//   border-color: var(--primarycolordark);
//   outline-color: var(--accentcolor);
// }
// .basic-top-color-secondary {
//   border-top-color: var(--secondarycolorlight);
// }
// .basic-bottom-color-primary-dark {
//   background-color: var(--primarycolordark);
//   border-color: var(--primarycolordark);
//   outline-color: var(--accentcolor);
// }
// .basic-bottom-color-secondary {
//   border-bottom-color: var(--secondarycolorlight);
// }



// @include create(((basic: (border top, outline)): (color: (primary dark: ((background, border top): primary dark, outline: (secondary dark: hsla)), secondary: (secondary light: hsla)))));
// @include create(((border, outline): ((top, bottom) (color,): (primary dark: primary dark))));
// @include create(((border, outline): (color: (primary dark: primary dark, secondary: secondary light))));
// @include create((border: (color: (primary dark: primary dark, secondary: secondary light))));
// @include create((border: (top: (primary dark: primary dark, secondary: secondary light))));










// TODO: (border: ((top, right): (primary dark:  primary dark, secondary light: secondary light)))
// @include create((border: ((top, right): (primary dark:  primary dark, secondary light: secondary light))), $property: (name: border, suffix: color));
// .border-top-primary-dark {
//   border-top-color: var(--primarycolordark);
// }
// .border-top-secondary-light {
//   border-top-color: var(--secondarycolorlight);
// }
// .border-right-primary-dark {
//   border-right-color: var(--primarycolordark);
// }
// .border-right-secondary-light {
//   border-right-color: var(--secondarycolorlight);
// }


// TODO: (border: ((top, right) color: (primary dark:  primary dark, secondary light: secondary light)))
// @include create((border: ((top, right) color: (primary dark:  primary dark, secondary light: secondary light))), $property: (name: border));
// .border-top-color-primary-dark, .border-right-color-primary-dark {
//   border-top-color: var(--primarycolordark);
//   border-right-color: var(--primarycolordark);
// }
// .border-top-color-secondary-light, .border-right-color-secondary-light {
//   border-top-color: var(--secondarycolorlight);
//   border-right-color: var(--secondarycolorlight);
// }

// TODO: (border basic: (((left, top): color): (primary dark:  primary dark, secondary light: secondary light)))
// @include create((border basic: (((left, top): color): (primary dark:  primary dark, secondary light: secondary light))), $property: (name: border));
// .border-basic-left-color-primary-dark {
//   border-left-color: var(--primarycolordark);
// }
// .border-basic-left-color-secondary-light {
//   border-left-color: var(--secondarycolorlight);
// }
// .border-basic-top-color-primary-dark {
//   border-top-color: var(--primarycolordark);
// }
// .border-basic-top-color-secondary-light {
//   border-top-color: var(--secondarycolorlight);
// }





// TODO: (((background basic, border extended): (border-color background-color)): (primary dark:  primary dark, secondary light: secondary light))
// @include create((((background basic, border extended): (border, background)): (primary dark:  primary dark, secondary light: secondary light)));
// .background-basic-primary-dark {
//   border-color: var(--s-primary-color-dark);
//   background-color: var(--s-primary-color-dark);
// }
// .border-extended-primary-dark {
//   border-color: var(--s-primary-color-dark);
//   background-color: var(--s-primary-color-dark);
// }
// .background-basic-secondary-light {
//   border-color: var(--s-secondary-color-light);
//   background-color: var(--s-secondary-color-light);
// }
// .border-extended-secondary-light {
//   border-color: var(--s-secondary-color-light);
//   background-color: var(--s-secondary-color-light);
// }

// TODO: (((background basic, border extended): (border-color, background-color)): (primary dark:  primary dark, secondary light: secondary light))
// @include create((((background basic, border extended): (border, background)): (primary dark:  primary dark, secondary light: secondary light)));
// .background-basic-primary-dark {
//   border-color: var(--s-primary-color-dark);
// }
// .border-extended-primary-dark {
//   background-color: var(--s-primary-color-dark);
// }
// .background-basic-secondary-light {
//   border-color: var(--s-secondary-color-light);
// }
// .border-extended-secondary-light {
//   background-color: var(--s-secondary-color-light);
// }

// multiple properties multiple sides
// TODO: (border: ((inline end color, inline start color): (primary dark:  primary dark, secondary light: secondary light)))
// @include create((border: ((inline end, inline start): (primary dark:  primary dark, secondary light: secondary light))));
// .border-inline-end-color-primary-dark {
//   border-inline-end-color: var(--s-primary-color-dark);
// }
// .border-inline-end-color-secondary-light {
//   border-inline-end-color: var(--s-secondary-color-light);
// }
// .border-inline-start-color-primary-dark {
//   border-inline-start-color: var(--s-primary-color-dark);
// }
// .border-inline-start-color-secondary-light {
//   border-inline-start-color: var(--s-secondary-color-light);
// }

// TODO: (border (basic,): ((inline end, inline start) color: (primary dark:  primary dark, secondary light: secondary light)))
// @include create(((border basic: border): ((inline end, inline start): (primary dark:  primary dark, secondary light: secondary light))));
// .border-basic-inline-end-color-primary-dark, .border-basic-inline-start-color-primary-dark {
//   border-inline-end-color: var(--s-primary-color-dark);
//   border-inline-start-color: var(--s-primary-color-dark);
// }
// .border-basic-inline-end-color-secondary-light, .border-basic-inline-start-color-secondary-light {
//   border-inline-end-color: var(--s-secondary-color-light);
//   border-inline-start-color: var(--s-secondary-color-light);
// }

// TODO: (border (basic,): ((inline end color, inline start color): (primary dark:  primary dark, secondary light: secondary light)))
// @include create(((border basic: border): ((inline end, inline start): (primary dark:  primary dark, secondary light: secondary light))));
// .border-basic-inline-end-color-primary-dark {
//   border-inline-end-color: var(--s-primary-color-dark);
// }
// .border-basic-inline-end-color-secondary-light {
//   border-inline-end-color: var(--s-secondary-color-light);
// }
// .border-basic-inline-start-color-primary-dark {
//   border-inline-start-color: var(--s-primary-color-dark);
// }
// .border-basic-inline-start-color-secondary-light {
//   border-inline-start-color: var(--s-secondary-color-light);
// }

// TODO: ((border (basic,): border): ((left color, right color): (primary dark:  primary dark, secondary light: secondary light)))
// @include create(((border basic: border): ((left, right): (primary dark:  primary dark, secondary light: secondary light))));
// .border-basic-left-color-primary-dark {
//   border-left-color: var(--s-primary-color-dark);
// }
// .border-basic-left-color-secondary-light {
//   border-left-color: var(--s-secondary-color-light);
// }
// .border-basic-right-color-primary-dark {
//   border-right-color: var(--s-primary-color-dark);
// }
// .border-basic-right-color-secondary-light {
//   border-right-color: var(--s-secondary-color-light);
// }


// FEATURE: (class: value) and (property: variant).
// TODO: (color primary dark: primary dark, color secondary dark: secondary dark)
// @include create((color primary dark: primary dark, color secondary dark: secondary dark));
// TODO: (color: (primary dark: primary dark, secondary dark: secondary dark))
// @include create((color: (primary dark: primary dark, secondary dark: secondary dark)));
// .color-primary-dark {
//   color: var(--s-primary-color-dark);
// }
// .color-secondary-dark {
//   color: var(--s-secondary-color-dark);
// }


// SECTION: Adjust

// FEATURE: variant + adjust.
// TODO: (color primary dark: primary dark, color secondary dark: secondary dark)
// @include create((color primary dark: primary dark, color secondary dark: secondary dark), $hue: 15deg, $saturation: '/' 2, $lightness: '*' 5%, $alpha: 0.5);
// .color-primary-dark {
//   color: hsla(calc(var(--s-primary-color-dark-h) + 15deg), calc(var(--s-primary-color-dark-s) / 2), calc(var(--s-primary-color-dark-l) * 5%), calc(var(--s-primary-color-dark-a) + 0.5));
// }
// .color-secondary-dark {
//   color: hsla(calc(var(--s-secondary-color-dark-h) + 15deg), calc(var(--s-secondary-color-dark-s) / 2), calc(var(--s-secondary-color-dark-l) * 5%), calc(var(--s-secondary-color-dark-a) + 0.5));
// }

// @include create((color primary dark: (primary dark) 15deg 5% 15% 0.5, color secondary dark: (secondary dark) 10% 0.9));
// .color-primary-dark {
//   color: hsla(calc(var(--s-primary-color-dark-h) + 15deg), calc(var(--s-primary-color-dark-s) + 5%), calc(var(--s-primary-color-dark-l) + 15%), calc(var(--s-primary-color-dark-a) + 0.5));
// }
// .color-secondary-dark {
//   color: hsla(var(--s-secondary-color-dark-h), var(--s-secondary-color-dark-s), calc(var(--s-secondary-color-dark-l) + 10%), calc(var(--s-secondary-color-dark-a) + 0.9));
// }

// FEATURE: variant + adjust + dictionary.
// @include create((color primary dark: primary dark, color secondary dark: secondary dark), 15deg, '/' 2, '*' 5%, 0.5, false, '&:hover', (primary: p));
// .color-p-dark:hover {
//   color: hsla(calc(var(--s-primary-color-dark-h) + 15deg), calc(var(--s-primary-color-dark-s) / 2), calc(var(--s-primary-color-dark-l) * 5%), calc(var(--s-primary-color-dark-a) + 0.5));
// }
// .color-secondary-dark:hover {
//   color: hsla(calc(var(--s-secondary-color-dark-h) + 15deg), calc(var(--s-secondary-color-dark-s) / 2), calc(var(--s-secondary-color-dark-l) * 5%), calc(var(--s-secondary-color-dark-a) + 0.5));
// }

// FEATURE: variant + important.
// TODO: (color primary dark: primary dark, color secondary dark: secondary dark)
// @include create((color primary dark: primary dark, color secondary dark: secondary dark), $important: true);
// .color-primary-dark {
//   color: var(--s-primary-color-dark) !important;
// }
// .color-secondary-dark {
//   color: var(--s-secondary-color-dark) !important;
// }

// FEATURE: variant + properties and (property: variant).
// TODO: (color primary dark: primary dark, color secondary dark: secondary dark)
// @include create((color primary dark: primary dark, color secondary dark: secondary dark), $property: background background-color);
// @include create((color: (primary dark: primary dark, secondary dark: secondary dark)), $property: background background-color);
// .color-primary-dark {
//   background: var(--s-primary-color-dark);
//   background-color: var(--s-primary-color-dark);
// }
// .color-secondary-dark {
//   background: var(--s-secondary-color-dark);
//   background-color: var(--s-secondary-color-dark);
// }


// TODO: (bg primary dark: primary dark, bg secondary dark: secondary dark)
// @include create((bg primary dark: primary dark, bg secondary dark: secondary dark), $property: background);
// .bg-primary-dark {
//   background: var(--s-primary-color-dark);
// }
// .bg-secondary-dark {
//   background: var(--s-secondary-color-dark);
// }

// TODO: (bg primary dark: primary dark, bg secondary dark: secondary dark)
// @include create((bg primary dark: primary dark, bg secondary dark: secondary dark), $property: (background, color));
// .bg-primary-dark {
//   background: var(--s-primary-color-dark);
//   color: var(--s-primary-color-dark);
// }
// .bg-secondary-dark {
//   background: var(--s-secondary-color-dark);
//   color: var(--s-secondary-color-dark);
// }


// FEATURE: (property/class: ((+property/class, +property/class): variant))
// TODO: ((background color): ((dark, light): ( primary dark: primary dark, secondary dark: secondary dark)))
// @include create(((background color): ((dark, light): ( primary dark: primary dark, secondary dark: secondary dark))), $pseudo-class: '&:hover');
// .background-color-dark-primary-dark:hover {
//   background-dark: var(--s-primary-color-dark);
//   color-dark: var(--s-primary-color-dark);
// }
// .background-color-dark-secondary-dark:hover {
//   background-dark: var(--s-secondary-color-dark);
//   color-dark: var(--s-secondary-color-dark);
// }
// .background-color-light-primary-dark:hover {
//   background-light: var(--s-primary-color-dark);
//   color-light: var(--s-primary-color-dark);
// }
// .background-color-light-secondary-dark:hover {
//   background-light: var(--s-secondary-color-dark);
//   color-light: var(--s-secondary-color-dark);
// }

// FEATURE: ((property/class, property/class): ((+property/class, +property/class): variant))).
// TODO: ((background, color): ((dark, light): ( primary dark: primary dark, secondary dark: secondary dark)))
// @include create(((background, color): ((dark, light): ( primary dark: primary dark, secondary dark: secondary dark))), $pseudo-class: '&:hover');
// .background-dark-primary-dark:hover {
//   background-dark: var(--s-primary-color-dark);
// }
// .background-dark-secondary-dark:hover {
//   background-dark: var(--s-secondary-color-dark);
// }
// .background-light-primary-dark:hover {
//   background-light: var(--s-primary-color-dark);
// }
// .background-light-secondary-dark:hover {
//   background-light: var(--s-secondary-color-dark);
// }
// .color-dark-primary-dark:hover {
//   color-dark: var(--s-primary-color-dark);
// }
// .color-dark-secondary-dark:hover {
//   color-dark: var(--s-secondary-color-dark);
// }
// .color-light-primary-dark:hover {
//   color-light: var(--s-primary-color-dark);
// }
// .color-light-secondary-dark:hover {
//   color-light: var(--s-secondary-color-dark);
// }




// FEATURE: (property/class: ((+property/class, +property/class): variant))).
// @include create((border: (
//   (block start color, block end color): (
//     primary: primary color,
//     primary dark: primary color dark,
//     primary light: primary color light,
//   ),
// )));
// .border-block-start-color-primary {
//   border-block-start-color: var(--s-primary-color);
// }
// .border-block-start-color-primary-dark {
//   border-block-start-color: var(--s-primary-color-dark);
// }
// .border-block-start-color-primary-light {
//   border-block-start-color: var(--s-primary-color-light);
// }
// .border-block-end-color-primary {
//   border-block-end-color: var(--s-primary-color);
// }
// .border-block-end-color-primary-dark {
//   border-block-end-color: var(--s-primary-color-dark);
// }
// .border-block-end-color-primary-light {
//   border-block-end-color: var(--s-primary-color-light);
// }

// FEATURE: (class: (+class: (class: (property: value)))).
// @include create((border: (
//   (block start end color): (
//     primary: (
//       (border-color, color): primary,
//     ),
//     primary dark: (
//       (border-color, color): primary dark,
//     ),
//     primary light: (
//       (border-color, color): primary light,
//     ),
//   ),
// )));
// .border-block-start-end-color-primary {
//   border-color: var(--s-primary-color);
//   color: var(--s-primary-color);
// }
// .border-block-start-end-color-primary-dark {
//   border-color: var(--s-primary-color-dark);
//   color: var(--s-primary-color-dark);
// }
// .border-block-start-end-color-primary-light {
//   border-color: var(--s-primary-color-light);
//   color: var(--s-primary-color-light);
// }

// FEATURE: (class: ((+class, +class) +class: (class: (property: value)))).
// @include create((border: (
//   (left, right) color: (
//     primary: (
//       (border-left-color, border-right-color): primary,
//     ),
//     primary dark: (
//       (border-left-color, border-right-color): primary dark,
//     ),
//     primary light: (
//       (border-left-color, border-right-color): primary light,
//     ),
//   ),
// )));
// .border-left-color-primary, .border-right-color-primary {
//   border-left-color: var(--s-primary-color);
//   border-right-color: var(--s-primary-color);
// }
// .border-left-color-primary-dark, .border-right-color-primary-dark {
//   border-left-color: var(--s-primary-color-dark);
//   border-right-color: var(--s-primary-color-dark);
// }
// .border-left-color-primary-light, .border-right-color-primary-light {
//   border-left-color: var(--s-primary-color-light);
//   border-right-color: var(--s-primary-color-light);
// }

// FEATURE: (property/class: ((+property/class, +property/class): (class: value)))).
// @include create((border: ((left-color, right-color): ( primary dark: primary dark, secondary dark: secondary dark))));
// .border-left-color-primary-dark {
//   border-left-color: var(--s-primary-color-dark);
// }
// .border-left-color-secondary-dark {
//   border-left-color: var(--s-secondary-color-dark);
// }
// .border-right-color-primary-dark {
//   border-right-color: var(--s-primary-color-dark);
// }
// .border-right-color-secondary-dark {
//   border-right-color: var(--s-secondary-color-dark);
// }

// @include create((( border background ): ((left-color, right-color ): ( primary dark: primary dark, secondary dark: secondary dark))));
// .border-background-left-color-primary-dark {
//   border-left-color: var(--s-primary-color-dark);
//   background-left-color: var(--s-primary-color-dark);
// }
// .border-background-left-color-secondary-dark {
//   border-left-color: var(--s-secondary-color-dark);
//   background-left-color: var(--s-secondary-color-dark);
// }
// .border-background-right-color-primary-dark {
//   border-right-color: var(--s-primary-color-dark);
//   background-right-color: var(--s-primary-color-dark);
// }
// .border-background-right-color-secondary-dark {
//   border-right-color: var(--s-secondary-color-dark);
//   background-right-color: var(--s-secondary-color-dark);
// }

// @include create(((border, background): ((left-color, right-color): ( primary dark: primary dark, secondary dark: secondary dark))));
// .border-left-color-primary-dark {
//   border-left-color: var(--s-primary-color-dark);
// }
// .border-left-color-secondary-dark {
//   border-left-color: var(--s-secondary-color-dark);
// }
// .border-right-color-primary-dark {
//   border-right-color: var(--s-primary-color-dark);
// }
// .border-right-color-secondary-dark {
//   border-right-color: var(--s-secondary-color-dark);
// }
// .background-left-color-primary-dark {
//   background-left-color: var(--s-primary-color-dark);
// }
// .background-left-color-secondary-dark {
//   background-left-color: var(--s-secondary-color-dark);
// }
// .background-right-color-primary-dark {
//   background-right-color: var(--s-primary-color-dark);
// }
// .background-right-color-secondary-dark {
//   background-right-color: var(--s-secondary-color-dark);
// }

// @include create(((variant (basic,): (property1, property2)): ((top left color, bottom right color): (value class one: value one, value class two: value two))));
// .variant-basic-top-left-color-value-class-one {
//   property1-top-left-color: var(--s-value-one-color);
// }
// .variant-basic-top-left-color-value-class-two {
//   property2-top-left-color: var(--s-value-two-color);
// }
// .variant-basic-bottom-right-color-value-class-one {
//   property1-bottom-right-color: var(--s-value-one-color);
// }
// .variant-basic-bottom-right-color-value-class-two {
//   property2-bottom-right-color: var(--s-value-two-color);
// }

// @include create(((variant (basic,): (property1, property2)): (((top left, bottom right): color): (value class one: value one, value class two: value two))));
// .variant-basic-top-left-color-value-class-one {
//   property1-top-left-color: var(--s-value-one-color);
// }
// .variant-basic-top-left-color-value-class-two {
//   property2-top-left-color: var(--s-value-two-color);
// }
// .variant-basic-bottom-right-color-value-class-one {
//   property1-bottom-right-color: var(--s-value-one-color);
// }
// .variant-basic-bottom-right-color-value-class-two {
//   property2-bottom-right-color: var(--s-value-two-color);
// }

// REVIEW:
// @include create(((border (basic, outline), (test 1, test 2) padding margin): ((top left, bottom right): (primary dark: primary dark, secondary dark: secondary dark))));
// @include create(((border (basic more,)): ((top left, bottom right): (primary dark: primary dark, secondary dark: secondary dark))));
// @include create(((border (basic more,), margin (basic)): ((top left, bottom right): (primary dark: primary dark, secondary dark: secondary dark))));
// @include create(((border, margin) (basic more,): ((top left, bottom right): (primary dark: primary dark, secondary dark: secondary dark))));
// @include create(((border (basic, outline), padding margin): ((top left, bottom right): (primary dark: primary dark, secondary dark: secondary dark))));
// @include create((border (top, bottom) color: (primary dark: primary dark, secondary dark: secondary dark)));
// @include create((border (left, top) color: (primary dark: primary dark, secondary dark: secondary dark)));
// @include create((border block (start, end) color: (primary dark: primary dark, secondary dark: secondary dark)));
// @include create((test (padding, margin) top: (primary dark: primary dark, secondary dark: secondary dark)));
// @include create((test: ((padding, margin): (primary dark: primary dark, secondary dark: secondary dark))));
// @include create(((): ((): (primary dark: primary dark, secondary dark: secondary dark))), $property: color);
// @include create(((border basic, margin basic): ((left color, top color): (primary dark: primary dark, secondary dark: secondary dark))));
// @include create(((border, margin): ((left, top) color: (primary dark: primary dark, secondary dark: secondary dark))));
// @include create(((padding margin): ((left top, right bottom): (primary dark: primary dark, secondary dark: secondary dark))));
// @include create(((border basic large: (border, margin)): ((left color, top color): (primary dark: primary dark, secondary dark: secondary dark))));
// @include create((((border, margin) basic): ((left color, top color): (primary dark: primary dark, secondary dark: secondary dark))));

// Structure.
// (class: value)
// (property: (class: value))
// (property: (attribute: (class: value)))
// ((property1, property2): ())

// @include create(((name one, name two) property (name one, name two): ((xl, xs) class one: value one, class two (xl, xs): value two)));
// @include create((((class1, class2): property): (((top, right): color): ((xl, xs): value one))));

// variant: ((class,): value, (class) class: value)
// @include create(((class1, class2): value1, (class3, class4) class: value2));
// .class1 {
//   color: var(--s-value1-color);
// }
// .class2 {
//   color: var(--s-value1-color);
// }
// .class3-class, .class4-class {
//   color: var(--s-value2-color);
// }

// variant: (property: (class: value), (class) class: value)
// @include create((property: (class: value), (class3, class4) class: value2));
// .property-class {
//   property: var(--s-value-color);
// }
// .class3-class, .class4-class {
//   color: var(--s-value2-color);
// }

// @include create(((property1, property2): (class: value)));
// .property1-class {
//   property1: var(--s-value-color);
// }
// .property2-class {
//   property2: var(--s-value-color);
// }

// @include create(((property1, property2): ((class1, class2): value)));
// .property1-class1 {
//   property1: var(--s-value-color);
// }
// .property1-class2 {
//   property1: var(--s-value-color);
// }
// .property2-class1 {
//   property2: var(--s-value-color);
// }
// .property2-class2 {
//   property2: var(--s-value-color);
// }

// @include create((
//     border: (
//       (top left, bottom right): (
//         third: black
//       )
//     )
//   ),

//   $property: (base: border, suffix: color),
//   $modifier: (class: (attribute: color)),

//   // $modifier: (
//   //   class: (prefix: border),
//   //   property: (base: border, attribute: color)
//   // )
// );

// @include create((
//     primary: primary dark,
//     secondary: secondary dark
//   ),
// );



// @include create(((border: ((border, outline) background)): (primary: primary dark, secondary: secondary light)));

