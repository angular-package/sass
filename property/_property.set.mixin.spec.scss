// Sass.
@use 'sass:list';
@use 'sass:map';

// Modules.
@use '../function';
@use '../meta';
@use '../property';
@use '../var';

function.$functions: map.set(function.$functions, var, meta.module-functions(var));
property.$type-function: map.merge(property.$type-function, (list: --var-get));
var.$var: map.merge(var.$var, (prefix: s, delimiter: '-'));

// Examples.
// div {
  // @include property.set((padding: (unit 1) ())); // padding: var(--s-unit-1);
  // @include property.set((padding: 5px (unit 1) 10px (unit 2)), $type-function: (list: --var-get)); // padding: 5px var(--s-unit-1) 10px var(--s-unit-2);

  // @include property.set((border: 1px solid (unit 1))); // border: 1px solid var(--s-unit-1);
  // @include property.set((border: 1px solid (--var-get (unit 1)))); // border: 1px solid var(--s-unit-1);
  // @include property.set((transition: (margin-right (second 4), color (second 2))));

  // @include property.set(((padding, margin): (unit 1) (unit 2))); // padding: var(--s-unit-1) var(--s-unit-2);
  // @include property.set((border: (1px solid (unit 1), 2px solid (unit 3)))); // margin: var(--s-unit-1) var(--s-unit-2);

  // @include property.set((border: 1px solid (--var-get: (unit 1)))); // border: 1px solid var(--s-unit-1);

  // FEATURE: (property: value)
  // @include property.set((padding: 10px)); // padding: 10px;
  // @include property.set((padding: 5px 10px 14px)); // padding: 5px 10px, 14px;

  // FEATURE: (property: value, value)
  // @include property.set((transition: (margin-right 2s, color 1s))); // transition: margin-right 2s, color 1s;

  // FEATURE: (property: value + important, property: value + important)
  // @include property.set((padding: 5px '!important', margin: 15px !important)); // padding: 5px !important; margin: 15px !important;
  // @include property.set((padding: 5px, margin: 15px), true); // padding: 5px !important; margin: 15px !important;

  // FEATURE: ((property, property): value)
  // @include property.set(((padding, margin): 5px 10px)); // padding: 5px 10px; margin: 5px 10px;

  // FEATURE: ((property, property): value) + important
  // @include property.set(((padding, margin): 5px 10px), true);
  // padding: 5px 10px !important;
  // margin: 5px 10px !important;

  // functions
  // @include property.set(((padding, margin): (--var-get (unit 5)))); // get()
  // padding: var(--s-unit-5);
  // margin: var(--s-unit-5);

  // @include property.set(((padding, margin): (--var-get (unit 5), --var-get (unit 2)))); // get()
  // @include property.set(((padding, margin): (unit 5) (unit 2))); // padding: var(--s-unit-5) var(--s-unit-2); margin: var(--s-unit-5) var(--s-unit-2);

  // @include property.set(((border, background) color: --color (primary dark))); // color()
  // border-color: var(--s-primary-color-dark);
  // background-color: var(--s-primary-color-dark);

  // FEATURE: ((property, property): value, value)
  // @include property.set(((padding, margin): (5px 10px, (unit 1) (unit 2)))); // padding: 5px 10px, var(--s-unit-1) var(--s-unit-2);
  // @include property.set((padding: (unit 1, '+' 15) (unit 2))); // padding: calc(var(--s-unit-1) + 15) var(--s-unit-2);
  // @include property.set((background: (--color: primary dark) '!important')); // background: var(--s-primary-color-dark) !important;
  // @include property.set((background: (--color: primary dark) (--color: primary dark) '!important')); // background: var(--s-primary-color-dark) var(--s-primary-color-dark);
  // @include property.set((background: (--color: primary dark)), true); // background: var(--s-primary-color-dark) !important;

  // FEATURE: (property: value, property: value) + important
  // @include property.set((padding: 5px 10px, margin: 10px), true);
  // padding: 5px 10px !important;
  // margin: 10px !important;

  // @include property.set((border: 1px solid red, margin: 10px), true);
  // border: 1px solid red !important;
  // margin: 10px !important;

  // FEATURE: ((property, property) attribute: value)
  // @include property.set(((border, margin) color: --color primary dark));
  // border-color: var(--s-primary-color-dark);
  // margin-color: var(--s-primary-color-dark);

  // FEATURE: ((property,property) (attribute, attribute): value)
  // @include property.set(((padding, margin) (top, bottom): 27px));
  // padding-top: 27px;
  // padding-bottom: 27px;
  // margin-top: 27px;
  // margin-bottom: 27px;

  // FEATURE: ((property, property) (side, side) (side, side) (attribute, attribute): value)
  // @include property.set(((padding, margin) (top, right) (left, bottom) (radius, color): any));
  // padding-top-left-radius: any;
  // padding-top-left-color: any;
  // padding-top-bottom-radius: any;
  // padding-top-bottom-color: any;
  // padding-right-left-radius: any;
  // padding-right-left-color: any;
  // padding-right-bottom-radius: any;
  // padding-right-bottom-color: any;
  // margin-top-left-radius: any;
  // margin-top-left-color: any;
  // margin-top-bottom-radius: any;
  // margin-top-bottom-color: any;
  // margin-right-left-radius: any;
  // margin-right-left-color: any;
  // margin-right-bottom-radius: any;
  // margin-right-bottom-color: any;

  // @include property.set(((property1, property2) (side1, side2) attribute: --color primary dark));
  // @include property.set((((property1, property2): ((side1, side2): attribute)): --color primary dark));
  // property1-side1-attribute: var(--s-primary-color-dark);
  // property1-side2-attribute: var(--s-primary-color-dark);
  // property2-side1-attribute: var(--s-primary-color-dark);
  // property2-side2-attribute: var(--s-primary-color-dark);

  // FEATURE: (property: value, value)
  // @include property.set((box shadow: (3px 3px (--var-get red), -1em 0 0.4em olive)));
  // box-shadow: 3px 3px var(--s-red), -1em 0 0.4em olive;
// }
